# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(20.0, 20.0), 
    point2=(-20.0, -20.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Bottom', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Bottom'].BaseSolidExtrude(depth=20.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(20.0, 20.0), 
    point2=(-20.0, -20.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='middle_base', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['middle_base'].BaseSolidExtrude(depth=5.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(5.0, 5.0), 
    point2=(-5.0, -5.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='load_plate', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['load_plate'].BaseSolidExtrude(depth=1.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 20.0), 
    point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-14.9968719482422, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9968719482422, 
    10.0), point2=(-17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 15.0), 
    point2=(-15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (0.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 15.0), point2=(
    5.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 20.0), point2=(
    10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 20.0), point2=
    (12.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(12.5, 15.0), point2=
    (10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 10.0), point2=
    (5.0499062538147, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0499062538147, 
    10.0), point2=(0.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[8]))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[7]))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 20.0), point2=(
    10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[9])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 20.0), point2=
    (12.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(12.5, 15.0), point2=
    (10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 10.0), point2=
    (5.36477899551392, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.36477899551392, 
    10.0), point2=(2.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.5, 15.0), point2=(
    5.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 15.0), point2=(
    2.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].autoConstrain(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], ))
mdb.models['Model-1'].sketches['__profile__'].autoConstrain(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], ))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[18], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[35], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[36]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-5.02596044540405, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14]), vector=(
    -2.47403955459595, 0.0))
mdb.models['Model-1'].sketches['__profile__'].move(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14]), vector=(
    -5.0519208908081, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.97403955459595, 
    15.0), point2=(7.35895776748657, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14]))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].copyMirror(mirrorLine=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[14]))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.35895776748657, 
    15.0), point2=(10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 20.0), point2=
    (14.8109035491943, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(14.8109035491943, 
    20.0), point2=(17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(17.5, 15.0), point2=
    (15.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 10.0), point2=
    (9.8779239654541, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(9.8779239654541, 
    10.0), point2=(7.35895776748657, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-7.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 5.0), point2=(
    -3.6615195274353, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.6615195274353, 
    5.0), point2=(-2.16118144989013, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-2.16118144989013, 
    10.0), point2=(2.47403955459595, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[27])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.47403955459595, 
    10.0), point2=(5.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(9.8779239654541, 
    10.0), point2=(7.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.5, 5.0), point2=(
    5.25981760025024, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.25981760025024, 
    5.0), point2=(2.47403955459595, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.6615195274353, 
    5.0), point2=(-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.25, 0.0), point2=
    (2.21607065200806, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[32])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.21607065200806, 
    0.0), point2=(5.25981760025024, 5.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.25, 0.0), point2=
    (2.53093957901001, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[32])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.53093957901001, 
    0.0), point2=(5.25981760025024, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 0.0), point2=
    (-15.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 5.0), point2=
    (-10.0638961791992, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 0.0), point2=
    (-12.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-12.5, 5.0), point2=
    (-7.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 5.0), point2=(
    -5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 0.0), point2=(
    -7.5, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, -5.0), point2=
    (-11.9531192779541, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[38])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-11.9531192779541, 
    -5.0), point2=(-15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-7.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 5.0), point2=(
    -3.6615195274353, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.6615195274353, 
    5.0), point2=(-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.25, 0.0), point2=
    (-3.75, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.75, -5.0), 
    point2=(-7.64988470077515, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[38])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.64988470077515, 
    -5.0), point2=(-10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.53093957901001, 
    0.0), point2=(5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -5.0), point2=(
    2.5, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.5, -10.0), point2=
    (-1.24751043319702, -10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[42])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.24751043319702, 
    -10.0), point2=(-3.75, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.5, 5.0), point2=(
    10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 0.0), point2=(
    7.5, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.5, -5.0), point2=(
    5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 10.0), point2=
    (17.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(17.5, 5.0), point2=(
    15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 0.0), point2=(
    10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[49])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 0.0), point2=(
    17.5, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(17.5, -5.0), point2=
    (15.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -10.0), 
    point2=(10.2977542877197, -10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[52])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.2977542877197, 
    -10.0), point2=(7.5, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-15.2067852020264, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[54])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.2067852020264, 
    0.0), point2=(-17.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 5.0), point2=
    (-14.9968719482422, 10.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.2067852020264, 
    0.0), point2=(-17.5, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, -5.0), 
    point2=(-15.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -10.0), 
    point2=(-10.3787651062012, -10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[59])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.3787651062012, 
    -10.0), point2=(-7.64988470077515, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.3787651062012, 
    -10.0), point2=(-7.5, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, -15.0), 
    point2=(-3.34665060043335, -15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[62])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.34665060043335, 
    -15.0), point2=(-1.24751043319702, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.5, -10.0), point2=
    (5.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -15.0), point2=
    (7.88374185562134, -15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[65])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.88374185562134, 
    -15.0), point2=(10.2977542877197, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.34665060043335, 
    -15.0), point2=(-1.25, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.25, -20.0), 
    point2=(2.63589334487915, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[68])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.63589334487915, 
    -20.0), point2=(5.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -10.0), 
    point2=(-17.5, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, -15.0), 
    point2=(-15.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -20.0), 
    point2=(-10.588680267334, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[72])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.588680267334, 
    -20.0), point2=(-7.5, -15.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -20.0), 
    point2=(-10.0638961791992, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[72])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0638961791992, 
    -20.0), point2=(-7.5, -15.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -10.0), 
    point2=(17.5, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(17.5, -15.0), 
    point2=(15.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -20.0), 
    point2=(10.0878391265869, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[76])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0878391265869, 
    -20.0), point2=(7.88374185562134, -15.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 15.0), 
    point2=(-15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[79])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 20.0), 
    point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-14.9968719482422, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[82])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9968719482422, 
    10.0), point2=(-17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[84])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[84])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 20.0), 
    point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-5.02596044540405, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[86])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-5.02596044540405, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[84])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.02596044540405, 
    15.0), point2=(-2.52596044540405, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-2.52596044540405, 
    20.0), point2=(2.47403955459595, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[86])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.47403955459595, 
    20.0), point2=(4.97403955459595, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.97403955459595, 
    15.0), point2=(2.47403955459595, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.47403955459595, 
    10.0), point2=(-2.16118144989013, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[89])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-2.16118144989013, 
    10.0), point2=(-5.02596044540405, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.97403955459595, 
    15.0), point2=(7.35895776748657, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[91])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.35895776748657, 
    15.0), point2=(10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 20.0), point2=
    (14.8109035491943, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[93])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(14.8109035491943, 
    20.0), point2=(17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(17.5, 15.0), point2=
    (15.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 10.0), point2=
    (9.8779239654541, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[96])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(9.8779239654541, 
    10.0), point2=(7.35895776748657, 15.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 5.0), point2=
    (-14.9968719482422, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9968719482422, 
    10.0), point2=(-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[99])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-7.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 5.0), point2=(
    -10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-15.2067852020264, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[102])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.2067852020264, 
    0.0), point2=(-17.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 5.0), point2=(
    -3.6615195274353, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[104])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-3.6615195274353, 
    5.0), point2=(-2.16118144989013, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-2.16118144989013, 
    10.0), point2=(2.47403955459595, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[106])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.47403955459595, 
    10.0), point2=(5.25981760025024, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.25981760025024, 
    5.0), point2=(2.53093957901001, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.53093957901001, 
    0.0), point2=(-1.25, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[109])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-1.25, 0.0), point2=
    (-3.6615195274353, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.53093957901001, 
    0.0), point2=(5.25981760025024, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.25981760025024, 
    5.0), point2=(7.5, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[112])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.5, 5.0), point2=(
    10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 0.0), point2=(
    7.5, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.5, -5.0), point2=(
    5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[115])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -5.0), point2=(
    2.53093957901001, 0.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
#* Nothing to undo.
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[107])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[107])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 20.0), 
    point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-14.9968719482422, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[110])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9968719482422, 
    10.0), point2=(-17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 15.0), 
    point2=(-15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
#* Nothing to undo.
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 15.0), 
    point2=(-15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[108])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 20.0), 
    point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-14.9968719482422, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[111])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9968719482422, 
    10.0), point2=(-17.5, 15.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-14.9968719482422, 
    10.0), point2=(-17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-17.5, 15.0), 
    point2=(-15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[114])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 20.0), 
    point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-5.02596044540405, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[116])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.02596044540405, 
    15.0), point2=(-2.52596044540405, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-2.52596044540405, 
    20.0), point2=(2.47403955459595, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[118])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.47403955459595, 
    20.0), point2=(4.97403955459595, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.97403955459595, 
    15.0), point2=(7.35895776748657, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[120])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.35895776748657, 
    15.0), point2=(10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 20.0), point2=
    (14.8109035491943, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[122])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(14.8109035491943, 
    20.0), point2=(17.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(17.5, 15.0), point2=
    (15.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 10.0), point2=
    (9.8779239654541, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[125])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(9.8779239654541, 
    10.0), point2=(7.35895776748657, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(7.35895776748657, 
    15.0), point2=(4.97403955459595, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[127])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.97403955459595, 
    15.0), point2=(2.47403955459595, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(2.47403955459595, 
    10.0), point2=(-2.16118144989013, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[129])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-2.16118144989013, 
    10.0), point2=(-5.02596044540405, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.02596044540405, 
    15.0), point2=(-7.5, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[131])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-7.5, 15.0), point2=
    (-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-14.9968719482422, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[133])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 10.0), 
    point2=(-15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 20.0), 
    point2=(-5.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 20.0), point2=
    (0.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 10.0), point2=(
    -5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 0.0), point2=(
    -15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 0.0), point2=
    (-20.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 10.0), point2=(
    4.80615234375, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.80615234375, 10.0)
    , point2=(10.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 20.0), point2=
    (20.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 10.0), 
    point2=(-10.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 15.0), 
    point2=(-5.28676223754883, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.28676223754883, 
    15.0), point2=(0.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 10.0), point2=(
    -4.72879219394054, 5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.72879219394054, 
    5.0), point2=(-9.49214172363281, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-9.49214172363281, 
    5.0), point2=(-15.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 10.0), point2=(
    4.80615234375, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.80615234375, 10.0)
    , point2=(10.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 15.0), point2=
    (15.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 15.0), point2=
    (20.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 10.0), point2=
    (15.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 5.0), point2=(
    10.2130699157715, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.2130699157715, 
    5.0), point2=(4.80615234375, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.80615234375, 10.0)
    , point2=(10.2130699157715, 5.0))
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[14], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.2130699157715, 
    5.0), point2=(5.58936340128571, 0.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.58936340128571, 
    0.0), point2=(0.60076904296875, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.60076904296875, 
    0.0), point2=(-4.72879219394054, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.72879219394054, 
    5.0), point2=(-9.49214172363281, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-9.49214172363281, 
    5.0), point2=(-15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 0.0), point2=
    (-10.4610306317825, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.4610306317825, 
    -5.0), point2=(-5.28676223754883, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.28676223754883, 
    -5.0), point2=(0.60076904296875, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.60076904296875, 
    0.0), point2=(5.58936340128571, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[24])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.58936340128571, 
    0.0), point2=(10.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -5.0), point2=
    (4.96640877053142, -9.44026833993848))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[26])
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.58936340128571, 
    0.0), point2=(10.9962809731353, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.9962809731353, 
    -5.0), point2=(6.25000000017462, -10.1325499985784))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[26])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(6.25000000017462, 
    -10.1325499985784), point2=(0.0, -10.1325499985784))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[27])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    -10.1325499985784), point2=(-5.28676223754883, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.58936340128571, 
    0.0), point2=(10.2130699157715, 5.0))
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.2130699157715, 
    5.0), point2=(15.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[30])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 5.0), point2=(
    20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 0.0), point2=(
    15.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[31], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[32])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -5.0), point2=
    (10.9962809731353, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[33])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -10.0), 
    point2=(-10.4610306317825, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.4610306317825, 
    -5.0), point2=(-5.28676223754883, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.28676223754883, 
    -5.0), point2=(0.0, -10.1325499985784))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    -10.1325499985784), point2=(-4.7254688929313, -15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[36], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.7254688929313, 
    -15.0), point2=(-10.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[38])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, -15.0), 
    point2=(-15.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.7254688929313, 
    -15.0), point2=(0.0, -19.5876293028898))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[40])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    -19.5876293028898), point2=(4.80615234375, -19.5876293028898))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[41])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.80615234375, 
    -19.5876293028898), point2=(8.75, -15.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(6.25000000017462, 
    -10.1325499985784), point2=(0.0, -10.1325499985784))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[40])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    -10.1325499985784), point2=(-4.7254688929313, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-4.7254688929313, 
    -15.0), point2=(0.424760758107823, -20.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[41], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[42])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.424760758107823, 
    -20.0), point2=(6.25, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[43])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(6.25, -20.0), 
    point2=(8.75, -15.0))
mdb.models['Model-1'].sketches['__profile__'].undo()
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(6.25, -20.0), 
    point2=(10.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -15.0), 
    point2=(6.25000000017462, -10.1325499985784))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -5.0), point2=
    (20.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[32], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -10.0), 
    point2=(15.0241756436881, -14.9758243560791))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[47])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0241756436881, 
    -14.9758243560791), point2=(10.0, -15.0))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='geocell', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['geocell'].BaseShellExtrude(depth=5.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='bottom')
mdb.models['Model-1'].materials['bottom'].Density(table=((1800.0, ), ))
mdb.models['Model-1'].materials['bottom'].Elastic(table=((21000000.0, 0.38), ))
mdb.models['Model-1'].materials['bottom'].MohrCoulombPlasticity(
    meridionalEccentricity=0.3, table=((10.0, 2.0), ))
mdb.models['Model-1'].materials['bottom'].mohrCoulombPlasticity.MohrCoulombHardening(
    table=((10000.0, 0.0), ))
mdb.models['Model-1'].materials['bottom'].mohrCoulombPlasticity.TensionCutOff(
    dependencies=0, table=((0.0, 0.0), ), temperatureDependency=OFF)
mdb.models['Model-1'].Material(name='geocell')
mdb.models['Model-1'].materials['geocell'].Density(table=((990.0, ), ))
mdb.models['Model-1'].materials['geocell'].Elastic(table=((21000.0, 0.41), ))
mdb.models['Model-1'].materials['bottom'].mohrCoulombPlasticity.setValues(
    table=((10.0, 0.0), ))
mdb.models['Model-1'].materials['bottom'].mohrCoulombPlasticity.tensionCutOff.setValues(
    dependencies=0, table=((0.0, 0.0), ), temperatureDependency=OFF)
mdb.models['Model-1'].materials['geocell'].elastic.setValues(table=((
    21000000.0, 0.41), ))
mdb.models['Model-1'].Material(name='base')
mdb.models['Model-1'].materials['base'].Density(table=((2300.0, ), ))
mdb.models['Model-1'].materials['base'].Elastic(table=((114000000.0, 0.4), ))
mdb.models['Model-1'].materials['base'].MohrCoulombPlasticity(table=((31.0, 
    15.0), ))
mdb.models['Model-1'].materials['base'].mohrCoulombPlasticity.MohrCoulombHardening(
    table=((1.0, 0.0), ))
mdb.models['Model-1'].materials['base'].mohrCoulombPlasticity.TensionCutOff(
    dependencies=0, table=((0.0, 0.0), ), temperatureDependency=OFF)
mdb.models['Model-1'].Material(name='load_plate')
mdb.models['Model-1'].materials['load_plate'].Density(table=((7850.0, ), ))
mdb.models['Model-1'].materials['load_plate'].Elastic(table=((210000000000.0, 
    0.4), ))
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Bottom-1', 
    part=mdb.models['Model-1'].parts['Bottom'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='geocell-1', 
    part=mdb.models['Model-1'].parts['geocell'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='load_plate-1', 
    part=mdb.models['Model-1'].parts['load_plate'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='middle_base-1', 
    part=mdb.models['Model-1'].parts['middle_base'])
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].parts['load_plate'].projectEdgesOntoSketch(edges=(
    mdb.models['Model-1'].parts['load_plate'].edges[0], 
    mdb.models['Model-1'].parts['load_plate'].edges[1], 
    mdb.models['Model-1'].parts['load_plate'].edges[2], 
    mdb.models['Model-1'].parts['load_plate'].edges[3], 
    mdb.models['Model-1'].parts['load_plate'].edges[4], 
    mdb.models['Model-1'].parts['load_plate'].edges[5], 
    mdb.models['Model-1'].parts['load_plate'].edges[6], 
    mdb.models['Model-1'].parts['load_plate'].edges[7], 
    mdb.models['Model-1'].parts['load_plate'].edges[8], 
    mdb.models['Model-1'].parts['load_plate'].edges[9], 
    mdb.models['Model-1'].parts['load_plate'].edges[10], 
    mdb.models['Model-1'].parts['load_plate'].edges[11]), sketch=
    mdb.models['Model-1'].sketches['__edit__'], upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['load_plate'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Bottom'].ReferencePoint(point=
    mdb.models['Model-1'].parts['Bottom'].InterestingPoint(
    mdb.models['Model-1'].parts['Bottom'].edges[4], MIDDLE))
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['middle_base'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.models['Model-1'].parts['load_plate']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-5.0, 5.0), 
    point2=(5.0, -5.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='load_plate', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['load_plate'].BaseShellExtrude(depth=1.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
del mdb.models['Model-1'].parts['load_plate']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(-5.0, 5.0), 
    point2=(5.0, -5.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='load_plate', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['load_plate'].BaseSolidExtrude(depth=1.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].parts['Bottom'].features['RP']
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].vertices[25])
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.translate(instanceList=('load_plate-1', ), 
    vector=(-0.600769, 0.0, -2.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('geocell-1', ), 
    vector=(-0.600769, 0.0, 2.0))
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    previous='Initial')
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    formulation=FRICTIONLESS)
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactExp(createStepName='Step-1', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Step-1', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'IntProp-1'), ), stepName='Step-1')
mdb.models['Model-1'].interactions['Int-1'].move('Step-1', 'Initial')
mdb.models['Model-1'].interactionProperties['IntProp-1'].tangentialBehavior.setValues(
    formulation=ROUGH)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].faces.getSequenceFromMask(
    ('[#ffffffff #3f ]', ), ), name='m_Set-geo-cell')
mdb.models['Model-1'].EmbeddedRegion(absoluteTolerance=0.0, embeddedRegion=
    mdb.models['Model-1'].rootAssembly.sets['m_Set-geo-cell'], 
    fractionalTolerance=0.05, hostRegion=None, name='Constraint-1', 
    toleranceMethod=BOTH, weightFactorTolerance=1e-06)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-1geo-cell', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].faces.getSequenceFromMask(
    ('[#ffffffff #3f ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='s_Surf-middle', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['Model-1'].Tie(adjust=ON, main=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-1geo-cell'], name=
    'Constraint-2', positionToleranceMethod=COMPUTED, secondary=
    mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-middle'], thickness=OFF
    , tieRotations=ON)
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].rootAssembly.Surface(name='Surf-load-plate', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['load_plate-1'].faces.getSequenceFromMask(
    ('[#20 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude='Amp-1', createStepName='Step-1', 
    distributionType=UNIFORM, field='', magnitude=777777.0, name='Load-1', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['Surf-load-plate'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].faces.getSequenceFromMask(
    ('[#10 ]', ), ), name='Set-bottom-encastre')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-encastre'])
mdb.models['Model-1'].boundaryConditions['BC-1'].move('Step-1', 'Initial')
mdb.models['Model-1'].rootAssembly.Set(cells=
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), ), edges=
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].edges.getSequenceFromMask(
    mask=('[#f60 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].edges.getSequenceFromMask(
    mask=('[#e01f #1fa0 #601e0 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].edges.getSequenceFromMask(
    mask=('[#ff0 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].faces.getSequenceFromMask(
    mask=('[#3e ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].faces.getSequenceFromMask(
    mask=('[#13007013 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].faces.getSequenceFromMask(
    mask=('[#3e ]', ), ), name='Set-all-vertical', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].vertices.getSequenceFromMask(
    mask=('[#a0 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].vertices.getSequenceFromMask(
    mask=('[#1c000407 #c00 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].vertices.getSequenceFromMask(
    mask=('[#f0 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-all-vertical'], 
    u1=0.0, u2=0.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=0.0)
mdb.models['Model-1'].boundaryConditions['BC-2'].move('Step-1', 'Initial')
mdb.models['Model-1'].parts['Bottom'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.0)
mdb.models['Model-1'].parts['Bottom'].generateMesh()
mdb.models['Model-1'].parts['geocell'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=0.77)
mdb.models['Model-1'].parts['geocell'].generateMesh()
mdb.models['Model-1'].parts['load_plate'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['load_plate'].generateMesh()
mdb.models['Model-1'].parts['middle_base'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.0)
mdb.models['Model-1'].parts['middle_base'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='bottom', name=
    'Section-1', thickness=None)
mdb.models['Model-1'].parts['middle_base'].Set(cells=
    mdb.models['Model-1'].parts['middle_base'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-bottom-section')
mdb.models['Model-1'].parts['middle_base'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['middle_base'].sets['Set-bottom-section'], 
    sectionName='Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-2', thickness=None)
del mdb.models['Model-1'].sections['Section-2']
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-2', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-3', thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-4', thickness=None)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-5', thickness=None)
del mdb.models['Model-1'].sections['Section-2']
del mdb.models['Model-1'].sections['Section-3']
del mdb.models['Model-1'].sections['Section-4']
del mdb.models['Model-1'].sections['Section-5']
mdb.models['Model-1'].HomogeneousSolidSection(material='geocell', name=
    'Section-2', thickness=None)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sections['Section-2']
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='geocell', name='Section-2', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1.0, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['geocell'].Set(faces=
    mdb.models['Model-1'].parts['geocell'].faces.getSequenceFromMask((
    '[#ffffffff #3f ]', ), ), name='Set-geocell-section')
mdb.models['Model-1'].parts['geocell'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['geocell'].sets['Set-geocell-section'], 
    sectionName='Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].HomogeneousSolidSection(material='load_plate', name=
    'Section-3', thickness=None)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['load_plate'].Set(cells=
    mdb.models['Model-1'].parts['load_plate'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-load-plate-section')
mdb.models['Model-1'].parts['load_plate'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['load_plate'].sets['Set-load-plate-section'], 
    sectionName='Section-3', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='base', name='Section-4'
    , thickness=None)
mdb.models['Model-1'].parts['middle_base'].Set(cells=
    mdb.models['Model-1'].parts['middle_base'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-middle-base')
mdb.models['Model-1'].parts['middle_base'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['middle_base'].sets['Set-middle-base'], 
    sectionName='Section-4', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE DILATION ANGLE IS SMALL OR ZERO. THE VALUE WILL BE SET TO 0.10000', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '500 elements have missing property definitions. The elements have been identified in element set ErrElemMissingSection.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OUTPUT REQUEST STATUS IS NOT AVAILABLE FOR ELEMENT TYPE C3D8R', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE AMPLITUDE PARAMETER IS NOT VALID IN THE MODEL DEFINITION AND WILL BE IGNORED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Windows\\system32\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(variables=
    PRESELECT)
mdb.models['Model-1'].HomogeneousSolidSection(material='bottom', name=
    'Section-5', thickness=None)
mdb.models['Model-1'].parts['Bottom'].Set(cells=
    mdb.models['Model-1'].parts['Bottom'].cells.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-bottom-section')
mdb.models['Model-1'].parts['Bottom'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Bottom'].sets['Set-bottom-section'], 
    sectionName='Section-5', thicknessAssignment=FROM_SECTION)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].materials['bottom'].mohrCoulombPlasticity.setValues(
    table=((10.0, 0.2), ))
mdb.models['Model-1'].materials['bottom'].mohrCoulombPlasticity.tensionCutOff.setValues(
    dependencies=0, table=((0.0, 0.0), ), temperatureDependency=OFF)
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE AMPLITUDE PARAMETER IS NOT VALID IN THE MODEL DEFINITION AND WILL BE IGNORED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5288, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 974 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 6852, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 7.88611432653852e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 5.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jul 17 07:35:55 2024', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE AMPLITUDE PARAMETER IS NOT VALID IN THE MODEL DEFINITION AND WILL BE IGNORED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3932, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 974 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 8816, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 7.88611432653852e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 1.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500766672194004, 
    'stableTimeIncrement': 7.88611505413428e-05, 
    'internalEnergy': 0.1791140884161, 'stepTime': 0.0500766672194004, 
    'totalEnergy': 0.0141789559274912, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0127381598576903, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 635, 'distortionContrEnergy': 0.0, 
    'externalWork': 6057.6201171875, 'kineticEnergy': 6057.7734375, 
    'wallTime': 5.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100076109170914, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 0.652208924293518, 'stepTime': 0.100076109170914, 
    'totalEnergy': 0.0616151429712772, 'jobName': 'Job-1', 
    'artificialEnergy': 0.063861183822155, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1269, 'distortionContrEnergy': 0.0, 
    'externalWork': 96617.015625, 'kineticEnergy': 96617.1171875, 
    'wallTime': 7.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150073766708374, 
    'stableTimeIncrement': 7.88611505413428e-05, 
    'internalEnergy': 1.3063542842865, 'stepTime': 0.150073766708374, 
    'totalEnergy': 0.114775873720646, 'jobName': 'Job-1', 
    'artificialEnergy': 0.123383939266205, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1903, 'distortionContrEnergy': 0.0, 'externalWork': 488615.0, 
    'kineticEnergy': 488614.6875, 'wallTime': 10.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200069069862366, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 1.97343230247498, 'stepTime': 0.200069069862366, 
    'totalEnergy': 0.204399719834328, 'jobName': 'Job-1', 
    'artificialEnergy': 0.165578946471214, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2537, 'distortionContrEnergy': 0.0, 
    'externalWork': 1543437.625, 'kineticEnergy': 1543436.875, 
    'wallTime': 12.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250064373016357, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 2.81051015853882, 'stepTime': 0.250064373016357, 
    'totalEnergy': 0.561461329460144, 'jobName': 'Job-1', 
    'artificialEnergy': 0.207414343953133, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3171, 'distortionContrEnergy': 0.0, 
    'externalWork': 3766921.75, 'kineticEnergy': 3766920.5, 'wallTime': 15.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300059676170349, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 3.8009090423584, 'stepTime': 0.300059676170349, 
    'totalEnergy': 0.450057595968246, 'jobName': 'Job-1', 
    'artificialEnergy': 0.231757596135139, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3805, 'distortionContrEnergy': 0.0, 'externalWork': 7809357.5, 
    'kineticEnergy': 7809355.0, 'wallTime': 18.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350054979324341, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 4.97580909729004, 'stepTime': 0.350054979324341, 
    'totalEnergy': -0.0558822378516197, 'jobName': 'Job-1', 
    'artificialEnergy': 0.257015824317932, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4439, 'distortionContrEnergy': 0.0, 
    'externalWork': 14465489.0, 'kineticEnergy': 14465485.0, 'wallTime': 20.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.40000993013382, 
    'stableTimeIncrement': 7.88573815952986e-05, 'internalEnergy': 4101879.25, 
    'stepTime': 0.40000993013382, 'totalEnergy': -100888.4765625, 
    'jobName': 'Job-1', 'artificialEnergy': 194536.0625, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 5073, 
    'distortionContrEnergy': 0.0, 'externalWork': 22630554.0, 
    'kineticEnergy': 15566092.0, 'wallTime': 23.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.450005233287811, 
    'stableTimeIncrement': 7.88600082159974e-05, 'internalEnergy': 5448607.0, 
    'stepTime': 0.450005233287811, 'totalEnergy': -90961.8046875, 
    'jobName': 'Job-1', 'artificialEnergy': 461988.3125, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 5707, 
    'distortionContrEnergy': 0.0, 'externalWork': 22037586.0, 
    'kineticEnergy': 11780300.0, 'wallTime': 26.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.50003057718277, 
    'stableTimeIncrement': 7.51907718949951e-05, 'internalEnergy': 8119852.5, 
    'stepTime': 0.50003057718277, 'totalEnergy': -30147.7578125, 
    'jobName': 'Job-1', 'artificialEnergy': 1802658.625, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 6357, 
    'distortionContrEnergy': 0.0, 'externalWork': 24220732.0, 
    'kineticEnergy': 9949136.0, 'wallTime': 29.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550041317939758, 
    'stableTimeIncrement': 7.51906190998852e-05, 'internalEnergy': 10455029.0, 
    'stepTime': 0.550041317939758, 'totalEnergy': -1170.49499511719, 
    'jobName': 'Job-1', 'artificialEnergy': 2546867.75, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 7017, 
    'distortionContrEnergy': 0.0, 'externalWork': 25615922.0, 
    'kineticEnergy': 8143556.0, 'wallTime': 32.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600052237510681, 
    'stableTimeIncrement': 7.51902334741317e-05, 'internalEnergy': 11313238.0, 
    'stepTime': 0.600052237510681, 'totalEnergy': 9825.2646484375, 
    'jobName': 'Job-1', 'artificialEnergy': 2869544.25, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 7681, 
    'distortionContrEnergy': 0.0, 'externalWork': 27088116.0, 
    'kineticEnergy': 7955812.0, 'wallTime': 34.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.650034606456757, 
    'stableTimeIncrement': 7.51901316107251e-05, 'internalEnergy': 13599686.0, 
    'stepTime': 0.650034606456757, 'totalEnergy': 7750.31103515625, 
    'jobName': 'Job-1', 'artificialEnergy': 3271182.75, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 8346, 
    'distortionContrEnergy': 0.0, 'externalWork': 28557996.0, 
    'kineticEnergy': 6624050.0, 'wallTime': 37.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700016975402832, 
    'stableTimeIncrement': 7.51908446545713e-05, 'internalEnergy': 13662480.0, 
    'stepTime': 0.700016975402832, 'totalEnergy': 4972.12646484375, 
    'jobName': 'Job-1', 'artificialEnergy': 3534843.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 9011, 'distortionContrEnergy': 0.0, 
    'externalWork': 28732504.0, 'kineticEnergy': 6388377.0, 'wallTime': 40.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750074505805969, 
    'stableTimeIncrement': 7.51907282392494e-05, 'internalEnergy': 13224743.0, 
    'stepTime': 0.750074505805969, 'totalEnergy': 6303.09912109375, 
    'jobName': 'Job-1', 'artificialEnergy': 3604090.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 9677, 'distortionContrEnergy': 0.0, 
    'externalWork': 27842788.0, 'kineticEnergy': 5717535.5, 'wallTime': 43.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800056874752045, 
    'stableTimeIncrement': 7.51908519305289e-05, 'internalEnergy': 13719743.0, 
    'stepTime': 0.800056874752045, 'totalEnergy': 3347.0947265625, 
    'jobName': 'Job-1', 'artificialEnergy': 3762660.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 10342, 'distortionContrEnergy': 0.0, 
    'externalWork': 28666054.0, 'kineticEnergy': 5884238.5, 'wallTime': 46.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.85003924369812, 
    'stableTimeIncrement': 7.5190699135419e-05, 'internalEnergy': 15147858.0, 
    'stepTime': 0.85003924369812, 'totalEnergy': 4177.1953125, 
    'jobName': 'Job-1', 'artificialEnergy': 3946468.25, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 11007, 
    'distortionContrEnergy': 0.0, 'externalWork': 29729438.0, 
    'kineticEnergy': 5366147.5, 'wallTime': 49.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900021612644196, 
    'stableTimeIncrement': 7.5190924690105e-05, 'internalEnergy': 14280169.0, 
    'stepTime': 0.900021612644196, 'totalEnergy': 5517.44873046875, 
    'jobName': 'Job-1', 'artificialEnergy': 4025026.5, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 11672, 'distortionContrEnergy': 0.0, 
    'externalWork': 28937956.0, 'kineticEnergy': 5348484.0, 'wallTime': 52.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.950003981590271, 
    'stableTimeIncrement': 7.51908810343593e-05, 'internalEnergy': 14670196.0, 
    'stepTime': 0.950003981590271, 'totalEnergy': 6810.34619140625, 
    'jobName': 'Job-1', 'artificialEnergy': 4141038.25, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 12337, 
    'distortionContrEnergy': 0.0, 'externalWork': 29094988.0, 
    'kineticEnergy': 5038292.0, 'wallTime': 55.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 
    'stableTimeIncrement': 7.5190888310317e-05, 'internalEnergy': 15614664.0, 
    'stepTime': 1.0, 'totalEnergy': 4937.54638671875, 'jobName': 'Job-1', 
    'artificialEnergy': 4250966.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13003, 'distortionContrEnergy': 0.0, 
    'externalWork': 30251592.0, 'kineticEnergy': 5170606.0, 'wallTime': 59.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Wed Jul 17 07:37:16 2024', 
    'jobName': 'Job-1'})
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-1']
# Save by mofid on 2024_07_19-09.39.07; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE AMPLITUDE PARAMETER IS NOT VALID IN THE MODEL DEFINITION AND WILL BE IGNORED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 3440, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 974 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9036, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 7.88611432653852e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 7.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500766672194004, 
    'stableTimeIncrement': 7.88611505413428e-05, 
    'internalEnergy': 0.1791140884161, 'stepTime': 0.0500766672194004, 
    'totalEnergy': 0.0141789559274912, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0127381598576903, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 635, 'distortionContrEnergy': 0.0, 
    'externalWork': 6057.6201171875, 'kineticEnergy': 6057.7734375, 
    'wallTime': 35.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100076109170914, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 0.652208924293518, 'stepTime': 0.100076109170914, 
    'totalEnergy': 0.0616151429712772, 'jobName': 'Job-1', 
    'artificialEnergy': 0.063861183822155, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1269, 'distortionContrEnergy': 0.0, 
    'externalWork': 96617.015625, 'kineticEnergy': 96617.1171875, 
    'wallTime': 61.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150073766708374, 
    'stableTimeIncrement': 7.88611505413428e-05, 
    'internalEnergy': 1.3063542842865, 'stepTime': 0.150073766708374, 
    'totalEnergy': 0.114775873720646, 'jobName': 'Job-1', 
    'artificialEnergy': 0.123383939266205, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1903, 'distortionContrEnergy': 0.0, 'externalWork': 488615.0, 
    'kineticEnergy': 488614.6875, 'wallTime': 82.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200069069862366, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 1.97343230247498, 'stepTime': 0.200069069862366, 
    'totalEnergy': 0.204399719834328, 'jobName': 'Job-1', 
    'artificialEnergy': 0.165578946471214, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2537, 'distortionContrEnergy': 0.0, 
    'externalWork': 1543437.625, 'kineticEnergy': 1543436.875, 
    'wallTime': 104.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['middle_base'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.250064373016357, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 2.81051015853882, 'stepTime': 0.250064373016357, 
    'totalEnergy': 0.561461329460144, 'jobName': 'Job-1', 
    'artificialEnergy': 0.207414343953133, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3171, 'distortionContrEnergy': 0.0, 
    'externalWork': 3766921.75, 'kineticEnergy': 3766920.5, 'wallTime': 137.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300059676170349, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 3.8009090423584, 'stepTime': 0.300059676170349, 
    'totalEnergy': 0.450057595968246, 'jobName': 'Job-1', 
    'artificialEnergy': 0.231757596135139, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3805, 'distortionContrEnergy': 0.0, 'externalWork': 7809357.5, 
    'kineticEnergy': 7809355.0, 'wallTime': 164.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['middle_base'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350054979324341, 
    'stableTimeIncrement': 7.88611432653852e-05, 
    'internalEnergy': 4.97580909729004, 'stepTime': 0.350054979324341, 
    'totalEnergy': -0.0558822378516197, 'jobName': 'Job-1', 
    'artificialEnergy': 0.257015824317932, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4439, 'distortionContrEnergy': 0.0, 
    'externalWork': 14465489.0, 'kineticEnergy': 14465485.0, 
    'wallTime': 202.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.40000993013382, 
    'stableTimeIncrement': 7.88573815952986e-05, 'internalEnergy': 4101879.25, 
    'stepTime': 0.40000993013382, 'totalEnergy': -100888.4765625, 
    'jobName': 'Job-1', 'artificialEnergy': 194536.0625, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 5073, 
    'distortionContrEnergy': 0.0, 'externalWork': 22630554.0, 
    'kineticEnergy': 15566092.0, 'wallTime': 251.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.450005233287811, 
    'stableTimeIncrement': 7.88600082159974e-05, 'internalEnergy': 5448607.0, 
    'stepTime': 0.450005233287811, 'totalEnergy': -90961.8046875, 
    'jobName': 'Job-1', 'artificialEnergy': 461988.3125, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 5707, 
    'distortionContrEnergy': 0.0, 'externalWork': 22037586.0, 
    'kineticEnergy': 11780300.0, 'wallTime': 312.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.models['Model-1'].sketches['__edit__'].setAsConstruction(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[2], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[3], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[4], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[5]))
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.50003057718277, 
    'stableTimeIncrement': 7.51907718949951e-05, 'internalEnergy': 8119852.5, 
    'stepTime': 0.50003057718277, 'totalEnergy': -30147.7578125, 
    'jobName': 'Job-1', 'artificialEnergy': 1802658.625, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 6357, 
    'distortionContrEnergy': 0.0, 'externalWork': 24220732.0, 
    'kineticEnergy': 9949136.0, 'wallTime': 368.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
del mdb.models['Model-1'].sketches['__edit__']
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.550041317939758, 
    'stableTimeIncrement': 7.51906190998852e-05, 'internalEnergy': 10455029.0, 
    'stepTime': 0.550041317939758, 'totalEnergy': -1170.49499511719, 
    'jobName': 'Job-1', 'artificialEnergy': 2546867.75, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 7017, 
    'distortionContrEnergy': 0.0, 'externalWork': 25615922.0, 
    'kineticEnergy': 8143556.0, 'wallTime': 533.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.600052237510681, 
    'stableTimeIncrement': 7.51902334741317e-05, 'internalEnergy': 11313238.0, 
    'stepTime': 0.600052237510681, 'totalEnergy': 9825.2646484375, 
    'jobName': 'Job-1', 'artificialEnergy': 2869544.25, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 7681, 
    'distortionContrEnergy': 0.0, 'externalWork': 27088116.0, 
    'kineticEnergy': 7955812.0, 'wallTime': 560.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.650034606456757, 
    'stableTimeIncrement': 7.51901316107251e-05, 'internalEnergy': 13599686.0, 
    'stepTime': 0.650034606456757, 'totalEnergy': 7750.31103515625, 
    'jobName': 'Job-1', 'artificialEnergy': 3271182.75, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 8346, 
    'distortionContrEnergy': 0.0, 'externalWork': 28557996.0, 
    'kineticEnergy': 6624050.0, 'wallTime': 569.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700016975402832, 
    'stableTimeIncrement': 7.51908446545713e-05, 'internalEnergy': 13662480.0, 
    'stepTime': 0.700016975402832, 'totalEnergy': 4972.12646484375, 
    'jobName': 'Job-1', 'artificialEnergy': 3534843.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 9011, 'distortionContrEnergy': 0.0, 
    'externalWork': 28732504.0, 'kineticEnergy': 6388377.0, 'wallTime': 577.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750074505805969, 
    'stableTimeIncrement': 7.51907282392494e-05, 'internalEnergy': 13224743.0, 
    'stepTime': 0.750074505805969, 'totalEnergy': 6303.09912109375, 
    'jobName': 'Job-1', 'artificialEnergy': 3604090.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 9677, 'distortionContrEnergy': 0.0, 
    'externalWork': 27842788.0, 'kineticEnergy': 5717535.5, 'wallTime': 588.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800056874752045, 
    'stableTimeIncrement': 7.51908519305289e-05, 'internalEnergy': 13719743.0, 
    'stepTime': 0.800056874752045, 'totalEnergy': 3347.0947265625, 
    'jobName': 'Job-1', 'artificialEnergy': 3762660.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 10342, 'distortionContrEnergy': 0.0, 
    'externalWork': 28666054.0, 'kineticEnergy': 5884238.5, 'wallTime': 596.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.85003924369812, 
    'stableTimeIncrement': 7.5190699135419e-05, 'internalEnergy': 15147858.0, 
    'stepTime': 0.85003924369812, 'totalEnergy': 4177.1953125, 
    'jobName': 'Job-1', 'artificialEnergy': 3946468.25, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 11007, 
    'distortionContrEnergy': 0.0, 'externalWork': 29729438.0, 
    'kineticEnergy': 5366147.5, 'wallTime': 604.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900021612644196, 
    'stableTimeIncrement': 7.5190924690105e-05, 'internalEnergy': 14280169.0, 
    'stepTime': 0.900021612644196, 'totalEnergy': 5517.44873046875, 
    'jobName': 'Job-1', 'artificialEnergy': 4025026.5, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 11672, 'distortionContrEnergy': 0.0, 
    'externalWork': 28937956.0, 'kineticEnergy': 5348484.0, 'wallTime': 613.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.950003981590271, 
    'stableTimeIncrement': 7.51908810343593e-05, 'internalEnergy': 14670196.0, 
    'stepTime': 0.950003981590271, 'totalEnergy': 6810.34619140625, 
    'jobName': 'Job-1', 'artificialEnergy': 4141038.25, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 12337, 
    'distortionContrEnergy': 0.0, 'externalWork': 29094988.0, 
    'kineticEnergy': 5038292.0, 'wallTime': 621.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 
    'stableTimeIncrement': 7.5190888310317e-05, 'internalEnergy': 15614664.0, 
    'stepTime': 1.0, 'totalEnergy': 4937.54638671875, 'jobName': 'Job-1', 
    'artificialEnergy': 4250966.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13003, 'distortionContrEnergy': 0.0, 
    'externalWork': 30251592.0, 'kineticEnergy': 5170606.0, 'wallTime': 627.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Jul 19 10:06:04 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['load_plate'].regenerate()
mdb.models['Model-1'].parts['load_plate'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -9.95913600921631, 0.0332345962524414), value=30.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['load_plate'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -2.75457501411438, -19.9942302703857), value=200.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -10.0258531570435, -2.34814548492432), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -10.0258531570435, -1.13691520690918), value=20.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -14.9821805953979, 5.10595893859863), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[2], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[1], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[0], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -9.88142108917236, 1.88004493713379), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['load_plate'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -9.94130611419678, -21.424825668335), value=-25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    20.1974506378174, 0.621532440185547), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
# Save by mofid on 2024_07_19-11.09.53; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].dimensions[5], ))
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    0.417915344238281, -20.0513820648193), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_19-11.11.23; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    3.66275215148926, -10.0304832458496), value=25.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
# Save by mofid on 2024_07_19-11.12.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['load_plate'].regenerate()
# Save by mofid on 2024_07_19-11.12.48; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['load_plate'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_19-11.14.33; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].parts['load_plate'].generateMesh()
# Save by mofid on 2024_07_19-11.16.21; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE AMPLITUDE PARAMETER IS NOT VALID IN THE MODEL DEFINITION AND WILL BE IGNORED.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9820, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 974 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9700, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 7.886112871347e-05, 'internalEnergy': 0.0, 
    'stepTime': 0.0, 'totalEnergy': 0.0, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 0, 'distortionContrEnergy': 0.0, 'externalWork': 0.0, 
    'kineticEnergy': 0.0, 'wallTime': 5.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': ' The elements in the element set WarnElemSurfaceIntersect-Step1 are involved in surface intersections. Refer to the status and message file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.0500765815377235, 
    'stableTimeIncrement': 7.88611359894276e-05, 
    'internalEnergy': 0.918028116226196, 'stepTime': 0.0500765815377235, 
    'totalEnergy': 0.0260731894522905, 'jobName': 'Job-1', 
    'artificialEnergy': 0.0930814296007156, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 635, 'distortionContrEnergy': 0.0, 
    'externalWork': 15143.9658203125, 'kineticEnergy': 15144.767578125, 
    'wallTime': 11.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.100076019763947, 
    'stableTimeIncrement': 7.886112871347e-05, 
    'internalEnergy': 2.0916702747345, 'stepTime': 0.100076019763947, 
    'totalEnergy': 0.156135722994804, 'jobName': 'Job-1', 
    'artificialEnergy': 0.319393634796143, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1269, 'distortionContrEnergy': 0.0, 
    'externalWork': 241541.703125, 'kineticEnergy': 241541.71875, 
    'wallTime': 15.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.150073677301407, 
    'stableTimeIncrement': 7.88611359894276e-05, 
    'internalEnergy': 3.12744355201721, 'stepTime': 0.150073677301407, 
    'totalEnergy': 0.371715128421783, 'jobName': 'Job-1', 
    'artificialEnergy': 0.411738604307175, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 1903, 'distortionContrEnergy': 0.0, 
    'externalWork': 1221534.375, 'kineticEnergy': 1221533.625, 
    'wallTime': 18.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.200068980455399, 
    'stableTimeIncrement': 7.886112871347e-05, 
    'internalEnergy': 4.89836549758911, 'stepTime': 0.200068980455399, 
    'totalEnergy': 0.733492910861969, 'jobName': 'Job-1', 
    'artificialEnergy': 0.527794778347015, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 2537, 'distortionContrEnergy': 0.0, 
    'externalWork': 3858586.25, 'kineticEnergy': 3858584.25, 'wallTime': 22.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.25006428360939, 
    'stableTimeIncrement': 7.886112871347e-05, 
    'internalEnergy': 6.96649742126465, 'stepTime': 0.25006428360939, 
    'totalEnergy': 1.65443229675293, 'jobName': 'Job-1', 
    'artificialEnergy': 0.609165072441101, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3171, 'distortionContrEnergy': 0.0, 'externalWork': 9417288.0, 
    'kineticEnergy': 9417285.0, 'wallTime': 26.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.300059586763382, 
    'stableTimeIncrement': 7.886112871347e-05, 
    'internalEnergy': 9.46934127807617, 'stepTime': 0.300059586763382, 
    'totalEnergy': 3.18846964836121, 'jobName': 'Job-1', 
    'artificialEnergy': 0.665473639965057, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 3805, 'distortionContrEnergy': 0.0, 
    'externalWork': 19523364.0, 'kineticEnergy': 19523360.0, 'wallTime': 30.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.350054889917374, 
    'stableTimeIncrement': 7.886112871347e-05, 
    'internalEnergy': 12.4364900588989, 'stepTime': 0.350054889917374, 
    'totalEnergy': 3.68241405487061, 'jobName': 'Job-1', 
    'artificialEnergy': 0.717509210109711, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 4439, 'distortionContrEnergy': 0.0, 
    'externalWork': 36163676.0, 'kineticEnergy': 36163668.0, 'wallTime': 34.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.400067627429962, 
    'stableTimeIncrement': 7.51852203393355e-05, 'internalEnergy': 17659970.0, 
    'stepTime': 0.400067627429962, 'totalEnergy': 41519.09375, 
    'jobName': 'Job-1', 'artificialEnergy': 7288267.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 5096, 'distortionContrEnergy': 0.0, 
    'externalWork': 56752236.0, 'kineticEnergy': 29246944.0, 'wallTime': 38.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.450005441904068, 
    'stableTimeIncrement': 7.51888219383545e-05, 'internalEnergy': 18873454.0, 
    'stepTime': 0.450005441904068, 'totalEnergy': 79046.5390625, 
    'jobName': 'Job-1', 'artificialEnergy': 8941580.0, 'phase': EXPLICIT_PHASE, 
    'step': 1, 'increment': 5756, 'distortionContrEnergy': 0.0, 
    'externalWork': 60814364.0, 'kineticEnergy': 27464056.0, 'wallTime': 43.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.500022113323212, 
    'stableTimeIncrement': 7.51889019738883e-05, 'internalEnergy': 21800348.0, 
    'stepTime': 0.500022113323212, 'totalEnergy': 74198.0390625, 
    'jobName': 'Job-1', 'artificialEnergy': 10191549.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 6417, 
    'distortionContrEnergy': 0.0, 'externalWork': 63563376.0, 
    'kineticEnergy': 24751356.0, 'wallTime': 48.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.55002361536026, 
    'stableTimeIncrement': 7.51898478483781e-05, 'internalEnergy': 26997872.0, 
    'stepTime': 0.55002361536026, 'totalEnergy': 40996.6796875, 
    'jobName': 'Job-1', 'artificialEnergy': 11312129.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 7082, 
    'distortionContrEnergy': 0.0, 'externalWork': 68998048.0, 
    'kineticEnergy': 22240570.0, 'wallTime': 53.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.60000604391098, 
    'stableTimeIncrement': 7.51896950532682e-05, 'internalEnergy': 32343134.0, 
    'stepTime': 0.60000604391098, 'totalEnergy': 6625.798828125, 
    'jobName': 'Job-1', 'artificialEnergy': 12014037.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 7747, 
    'distortionContrEnergy': 0.0, 'externalWork': 74569824.0, 
    'kineticEnergy': 20202760.0, 'wallTime': 57.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.650063574314117, 
    'stableTimeIncrement': 7.51895349822007e-05, 'internalEnergy': 38919968.0, 
    'stepTime': 0.650063574314117, 'totalEnergy': -12643.2744140625, 
    'jobName': 'Job-1', 'artificialEnergy': 12620320.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 8413, 
    'distortionContrEnergy': 0.0, 'externalWork': 79478168.0, 
    'kineticEnergy': 17147444.0, 'wallTime': 61.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.700045943260193, 
    'stableTimeIncrement': 7.51904881326482e-05, 'internalEnergy': 41392812.0, 
    'stepTime': 0.700045943260193, 'totalEnergy': -23881.8125, 
    'jobName': 'Job-1', 'artificialEnergy': 12953256.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 9078, 
    'distortionContrEnergy': 0.0, 'externalWork': 81117208.0, 
    'kineticEnergy': 15644247.0, 'wallTime': 65.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.750028312206268, 
    'stableTimeIncrement': 7.51906336518005e-05, 'internalEnergy': 39751168.0, 
    'stepTime': 0.750028312206268, 'totalEnergy': -14036.912109375, 
    'jobName': 'Job-1', 'artificialEnergy': 13139841.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 9743, 
    'distortionContrEnergy': 0.0, 'externalWork': 79132720.0, 
    'kineticEnergy': 14964500.0, 'wallTime': 69.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.800010681152344, 
    'stableTimeIncrement': 7.51907427911647e-05, 'internalEnergy': 39057664.0, 
    'stepTime': 0.800010681152344, 'totalEnergy': -24064.173828125, 
    'jobName': 'Job-1', 'artificialEnergy': 13325755.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 10408, 
    'distortionContrEnergy': 0.0, 'externalWork': 79133400.0, 
    'kineticEnergy': 15394571.0, 'wallTime': 73.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.850068211555481, 
    'stableTimeIncrement': 7.5191019277554e-05, 'internalEnergy': 38496612.0, 
    'stepTime': 0.850068211555481, 'totalEnergy': -24975.7109375, 
    'jobName': 'Job-1', 'artificialEnergy': 13464429.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 11074, 
    'distortionContrEnergy': 0.0, 'externalWork': 78344240.0, 
    'kineticEnergy': 14983367.0, 'wallTime': 77.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.900050580501556, 
    'stableTimeIncrement': 7.51908737584017e-05, 'internalEnergy': 35822368.0, 
    'stepTime': 0.900050580501556, 'totalEnergy': -25143.994140625, 
    'jobName': 'Job-1', 'artificialEnergy': 13544045.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 11739, 
    'distortionContrEnergy': 0.0, 'externalWork': 75352296.0, 
    'kineticEnergy': 14961148.0, 'wallTime': 81.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 0.950032949447632, 
    'stableTimeIncrement': 7.51909537939355e-05, 'internalEnergy': 35709776.0, 
    'stepTime': 0.950032949447632, 'totalEnergy': -22827.462890625, 
    'jobName': 'Job-1', 'artificialEnergy': 13696243.0, 
    'phase': EXPLICIT_PHASE, 'step': 1, 'increment': 12404, 
    'distortionContrEnergy': 0.0, 'externalWork': 74767360.0, 
    'kineticEnergy': 14404071.0, 'wallTime': 85.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STATUS, {'totalTime': 1.0, 
    'stableTimeIncrement': 7.51905899960548e-05, 'internalEnergy': 37600156.0, 
    'stepTime': 1.0, 'totalEnergy': -21749.546875, 'jobName': 'Job-1', 
    'artificialEnergy': 13885089.0, 'phase': EXPLICIT_PHASE, 'step': 1, 
    'increment': 13069, 'distortionContrEnergy': 0.0, 
    'externalWork': 77054704.0, 'kineticEnergy': 14755081.0, 'wallTime': 90.0})
mdb.jobs['Job-1']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_COMPLETED, {'time': 'Fri Jul 26 04:03:04 2024', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_07_26-05.01.33; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_07_26-05.01.33; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_07_26-05.01.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.saveAs(pathName='C:/Users/mofid/Downloads/geogrid_on_rail__1.cae')
# Save by mofid on 2024_08_14-20.35.15; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].dimensions[3].setValues(value=10)
# Save by mofid on 2024_08_14-20.36.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_08_14-20.39.43; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -25.0933303833008, -5.28458499908447), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -4.70650291442871, 25.0706787109375), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -16.8779945373535, 12.3162059783936), value=7.07106781186548, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -7.00758934020996, 17.6391372680664), value=4.71323776245117, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -25.0481128692627, -6.17517423629761), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
# Save by mofid on 2024_08_19-08.53.03; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -3.51722526550293, 25.1895236968994), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[0])
# Save by mofid on 2024_08_19-08.53.08; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -24.7999897003174, -6.55466747283936), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
# Save by mofid on 2024_08_19-08.54.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Spot(point=(20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='crack', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['crack'].BaseShellExtrude(depth=20.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='CFRP')
mdb.models['Model-1'].materials['CFRP'].Density(table=((1700.0, ), ))
mdb.models['Model-1'].materials['CFRP'].Elastic(table=((240000000000.0, 0.24), 
    ))
del mdb.models['Model-1'].parts['middle_base'].sectionAssignments[1]
del mdb.models['Model-1'].parts['middle_base'].sectionAssignments[0]
mdb.models['Model-1'].HomogeneousSolidSection(material='CFRP', name=
    'Section-base', thickness=None)
mdb.models['Model-1'].parts['middle_base'].Set(cells=
    mdb.models['Model-1'].parts['middle_base'].cells.getSequenceFromMask((
    '[#1 ]', ), ), name='Set-CFRP')
mdb.models['Model-1'].parts['middle_base'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['middle_base'].sets['Set-CFRP'], sectionName=
    'Section-base', thicknessAssignment=FROM_SECTION)
# Save by mofid on 2024_08_19-09.06.41; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['middle_base'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='crack-1', part=
    mdb.models['Model-1'].parts['crack'])
mdb.models['Model-1'].rootAssembly.features['load_plate-1'].suppress()
del mdb.models['Model-1'].steps['Step-1']
mdb.models['Model-1'].StaticStep(initialInc=1e-05, minInc=1e-12, name='Step-1', 
    previous='Initial')
#* Interaction cannot be used with the current procedure.
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    previous='Initial')
mdb.models['Model-1'].steps['Step-1'].setValues(improvedDtMethod=ON, 
    scaleFactor=1.0)
mdb.models['Model-1'].parts['crack'].Set(faces=
    mdb.models['Model-1'].parts['crack'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-crack')
mdb.models['Model-1'].parts['crack'].sets.changeKey(fromName='Set-crack', 
    toName='set-crack')
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.engineeringFeatures.XFEMCrack(crackDomain=
    Region(
    cells=mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].cells.getSequenceFromMask(
    mask=('[#1 ]', ), )), crackLocation=
    mdb.models['Model-1'].rootAssembly.instances['crack-1'].sets['set-crack'], 
    name='Crack-1')
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].faces.getSequenceFromMask(
    mask=('[#4 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].faces.getSequenceFromMask(
    mask=('[#4 ]', ), ), name='Set-side')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-side'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].faces.getSequenceFromMask(
    mask=('[#2 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].faces.getSequenceFromMask(
    mask=('[#2 ]', ), ), name='Set-bottom-side')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-4', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-bottom-side'])
mdb.models['Model-1'].rootAssembly.Set(name='Set-node', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Bottom-1'].nodes.getSequenceFromMask(
    mask=('[#0:10 #80100000 #200400 #400801 #801002 #1002004 #2004008', 
    ' #4008010 #8010020 #10020040 #20040080 #40080100 #80100200 #200400 ]', ), 
    )+\
    mdb.models['Model-1'].rootAssembly.instances['middle_base-1'].nodes.getSequenceFromMask(
    mask=('[#0:3 #1000000 #2004008 #4008010 #8010020 #20040 ]', ), ))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
# Save by mofid on 2024_08_19-09.39.40; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -24.7079772949219, -4.23320198059082), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-5', region=mdb.models['Model-1'].rootAssembly.sets['Set-node'], u1=0.0, 
    u2=17.0, u3=0.0, ur1=0.0, ur2=0.0, ur3=0.0)
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-CFRP', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-CFRP'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-CFRP']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-CFRP'})
mdb.jobs['Job-CFRP']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ENRICHMENT KEYWORD IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-CFRP'})
mdb.jobs['Job-CFRP']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ANALYSIS WILL BE TERMINATED', 'jobName': 'Job-CFRP'})
mdb.jobs['Job-CFRP']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-CFRP'})
mdb.jobs['Job-CFRP']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-CFRP.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-CFRP'})
mdb.jobs['Job-CFRP']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-CFRP.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-CFRP'})
mdb.jobs.changeKey(fromName='Job-CFRP', toName='Job-7')
mdb.jobs['Job-7'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-7']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-7'})
mdb.jobs['Job-7']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ENRICHMENT KEYWORD IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-7'})
mdb.jobs['Job-7']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ANALYSIS WILL BE TERMINATED', 'jobName': 'Job-7'})
mdb.jobs['Job-7']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-7'})
mdb.jobs['Job-7']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-7.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-7'})
mdb.jobs['Job-7']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-7.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-7'})
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-8', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-8'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-8']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ENRICHMENT KEYWORD IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ANALYSIS WILL BE TERMINATED', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-8.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.jobs['Job-8']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-8.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-8'})
mdb.models['Model-1'].boundaryConditions['BC-1'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
mdb.models['Model-1'].boundaryConditions['BC-3'].move('Initial', 'Step-1')
mdb.models['Model-1'].boundaryConditions['BC-4'].move('Initial', 'Step-1')
mdb.models['Model-1'].boundaryConditions['BC-2'].resume()
mdb.models['Model-1'].boundaryConditions['BC-2'].suppress()
# Save by mofid on 2024_08_19-09.49.52; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['geocell'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['geocell'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -25.7303695678711, -4.85987281799316), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -5.42501926422119, -26.0341529846191), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
# Save by mofid on 2024_12_19-22.45.59; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Bottom'].regenerate()
mdb.models['Model-1'].parts['Bottom'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['load_plate'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['load_plate'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -0.448917388916016, -9.3740701675415), value=10.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
# Save by mofid on 2024_12_19-22.55.59; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['Bottom'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Bottom'].features['Solid extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['middle_base'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -31.9038467407227, -1.46413040161133), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -7.39607191085815, -25.7415409088135), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
# Save by mofid on 2024_12_19-22.59.17; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'].sketch)
mdb.models['Model-1'].parts['middle_base'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['middle_base'].features['Solid extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -29.2423896789551, -8.70153713226318), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[3])
mdb.models['Model-1'].sketches['__edit__'].ObliqueDimension(textPoint=(
    -5.20670032501221, -24.015453338623), value=40.0, vertex1=
    mdb.models['Model-1'].sketches['__edit__'].vertices[1], vertex2=
    mdb.models['Model-1'].sketches['__edit__'].vertices[2])
# Save by mofid on 2024_12_19-23.29.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts.changeKey(fromName='geocell', toName='Honeycomb')
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    -5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -5.0), point2=
    (-5.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[6]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    -5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -5.0), point2=
    (-5.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[5])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 15.0), point2=
    (0.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 10.0), point2=(
    5.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 15.0), point2=(
    5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -5.0), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 15.0), point2=(
    10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 10.0), point2=
    (15.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 15.0), point2=
    (15.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -5.0), point2=
    (10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 0.0), point2=(
    5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -5.0), point2=(
    5.0, -25.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[15])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -25.0), point2=
    (0.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, -20.0), point2=
    (-5.0, -25.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -25.0), 
    point2=(-5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[15], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[18], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[43]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 15.0), point2=
    (20.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 10.0), point2=
    (25.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 15.0), point2=
    (25.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, -5.0), point2=
    (20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 0.0), point2=(
    15.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[22], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[23])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -5.0), 
    point2=(-10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[24], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[65]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[26])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, -20.0), point2=
    (5.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -15.0), point2=
    (10.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[27], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[28])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -20.0), 
    point2=(10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 0.0), point2=(
    20.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[30])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -20.0), 
    point2=(15.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -15.0), 
    point2=(10.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[31], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[32])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, -5.0), point2=
    (30.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 0.0), point2=(
    30.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[34])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, -20.0), 
    point2=(25.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, -15.0), 
    point2=(20.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[36])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -5.0), point2=
    (-10.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-10.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[38])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, -20.0), 
    point2=(-5.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -15.0), 
    point2=(0.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[39], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[40])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 0.0), point2=
    (-15.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[41])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -5.0), 
    point2=(-20.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[41], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[42])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 0.0), point2=
    (-20.0, -18.75))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[43])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[43], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, 0.0), point2=
    (-20.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[44])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-20.0, -20.0), 
    point2=(-15.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -15.0), 
    point2=(-10.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[45], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, -5.0), 
    point2=(-15.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[47])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-15.0, 15.0), 
    point2=(-10.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 10.0), 
    point2=(-5.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[48], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[49])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 15.0), point2=
    (30.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[50])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 10.0), point2=
    (35.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[50], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[51])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(35.0, 15.0), point2=
    (35.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[52])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(35.0, -5.0), point2=
    (30.0, 0.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Auxetic', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Auxetic'].BaseShellExtrude(depth=5.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Bottom-1']
del mdb.models['Model-1'].rootAssembly.features['crack-1']
del mdb.models['Model-1'].rootAssembly.features['middle_base-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name='Auxetic-1', 
    part=mdb.models['Model-1'].parts['Auxetic'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic-1', ), 
    vector=(-50.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic-1', ), 
    vector=(-10.0, 0.0, 0.0))
# Save by mofid on 2024_12_20-06.10.32; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_12_20-06.34.49; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Material(name='MetaMaterial')
mdb.models['Model-1'].materials['MetaMaterial'].Density(table=((1170.0, ), ))
mdb.models['Model-1'].materials['MetaMaterial'].Elastic(table=((2000000000.0, 
    0.4), ))
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 20.0), point2=(
    -5.0, 25.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 25.0), point2=
    (-5.0, 6.25))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[3])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 25.0), point2=
    (-5.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 5.0), point2=(
    0.0, 10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 10.0), point2=(
    4.81425476074219, 10.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[6])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(4.81425476074219, 
    10.0), point2=(10.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 5.0), point2=(
    10.0, 25.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[8])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 25.0), point2=
    (5.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 20.0), point2=(
    0.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 20.0), point2=(
    0.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 30.0), point2=(
    5.0, 30.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 30.0), point2=(
    5.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[13])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[2], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[4], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[5], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[6], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[7], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[8], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[9], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[10], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[11], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[12], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[13], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[9], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[14], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[19], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[24], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[27], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[28], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[32], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[35], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[36]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    0.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 20.0), point2=(
    5.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 15.0), point2=(
    5.0, 19.840763092041))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[16])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 
    19.840763092041), point2=(8.75, 19.840763092041))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[17])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[17], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 
    19.840763092041), point2=(10.0, 19.840763092041))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[16], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 
    19.840763092041), point2=(10.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[18], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[19])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 15.0), point2=
    (15.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 20.0), point2=
    (15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[21])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 0.0), point2=(
    10.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 5.0), point2=(
    5.55491638183594, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[23])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.55491638183594, 
    5.0), point2=(5.55491638183594, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[24])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[23], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[24])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.55491638183594, 
    0.0), point2=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[24], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[25])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[24], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[25], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[69], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[74]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.55491638183594, 
    5.0), point2=(0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[22], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[23], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[26], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[66]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 0.0), point2=(
    10.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, 5.0), point2=(
    10.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[28])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -5.0), point2=
    (6.25, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[28], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[29])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[29], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -5.0), point2=
    (5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[30])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[28], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[30])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -5.0), point2=(
    5.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[31])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[30], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[31])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, 5.0), point2=(
    0.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 20.0), point2=
    (20.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[33])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 15.0), point2=
    (20.0, 20.5838623046875))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[34])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[33], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[34], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[101]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, 20.0), point2=
    (20.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[20], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[35])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 15.0), point2=
    (20.0, 20.435245513916))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[36])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 
    20.435245513916), point2=(25.0, 20.435245513916))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[36], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 
    20.435245513916), point2=(25.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[38])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[37], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[38])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 15.0), point2=
    (30.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 20.0), point2=
    (30.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[40])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 0.0), point2=(
    25.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 5.0), point2=(
    20.0717544555664, 5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[42])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0717544555664, 
    5.0), point2=(15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[42], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[43], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[125]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[41], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 0.0), point2=(
    25.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, 5.0), point2=(
    25.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[45])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, -5.0), point2=
    (20.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[45], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -5.0), point2=
    (20.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[47])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[46], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[47])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, 5.0), point2=(
    15.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(30.0, 20.0), point2=
    (34.975274086115, 15.024725913885))
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[39], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[49])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(34.975274086115, 
    15.024725913885), point2=(34.975274086115, 19.6921405792236))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[50])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(34.975274086115, 
    19.6921405792236), point2=(40.0, 19.6921405792236))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[51])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[50], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[51])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, 
    19.6921405792236), point2=(40.0, 15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[52])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[51], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[52])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, 15.0), point2=
    (45.0, 20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(45.0, 20.0), point2=
    (45.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[54])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(45.0, 0.0), point2=(
    40.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, 5.0), point2=(
    40.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[56])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, -5.0), point2=
    (35.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[57])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[56], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[57])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(35.0, -5.0), point2=
    (35.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[58])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[57], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[58])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(35.0, 5.0), point2=(
    30.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 
    5.12738656997681), point2=(-5.0, 5.12738656997681))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[60])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[60])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[52], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[14])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 
    5.12738656997681), point2=(-5.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[61])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[60], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[61])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, 0.0), point2=(
    -10.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 5.0), point2=
    (-10.0, -13.75))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[63])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[63], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, 5.0), point2=
    (-10.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[64])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, -15.0), 
    point2=(-5.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -10.0), 
    point2=(-5.0, -18.75))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[66])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[65], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[66], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[198]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-10.0, -15.0), 
    point2=(-5.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -10.0), 
    point2=(-5.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[68])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(-5.0, -20.0), 
    point2=(0.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[69])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[68], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[69])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, -20.0), point2=
    (0.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[70])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[69], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[70])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, -10.0), point2=
    (5.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(5.0, -15.0), point2=
    (5.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[72])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -5.0), point2=
    (10.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[73])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[28], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[73])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -15.0), 
    point2=(15.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -10.0), 
    point2=(15.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[75])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -20.0), 
    point2=(20.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[76])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[75], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[76])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -20.0), 
    point2=(20.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[77])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[76], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[77])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -10.0), 
    point2=(25.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(25.0, -15.0), 
    point2=(25.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[79])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[75], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[76], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[77], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[228], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[229], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[233]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[78], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[79], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[238]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[74], ))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -15.0), 
    point2=(10.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[80])
mdb.models['Model-1'].sketches['__profile__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__profile__'].geometry[73], 
    entity2=mdb.models['Model-1'].sketches['__profile__'].geometry[80])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(10.0, -20.0), 
    point2=(15.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[81])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[80], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[81])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -20.0), 
    point2=(15.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[82])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[81], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[82])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -10.0), 
    point2=(20.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[73], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[80], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[81], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[82], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[83], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[219], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[220], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[241], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[242], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[245], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[246], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[249], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[250]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(45.0, 
    5.12738656997681), point2=(50.0, 5.12738656997692))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[84])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[54], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[84])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[75], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[54])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(50.0, 
    5.12738656997692), point2=(50.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[85])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[84], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[85])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(50.0, 0.0), point2=(
    55.0, 5.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(55.0, 5.0), point2=(
    55.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[87])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(55.0, -15.0), 
    point2=(50.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(50.0, -10.0), 
    point2=(50.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[89])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(50.0, -20.0), 
    point2=(45.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[90])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[89], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[90])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(45.0, -20.0), 
    point2=(45.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[91])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[90], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[91])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(45.0, -10.0), 
    point2=(40.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, -20.0), 
    point2=(40.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[93])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[92], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[93]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(45.0, -10.0), 
    point2=(40.0, -15.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(40.0, -15.0), 
    point2=(40.0, -5.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[95])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -5.0), point2=
    (15.0, -10.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -10.0), 
    point2=(15.0, -30.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[97])
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -30.0), 
    point2=(20.0, -20.0))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(20.0, -20.0), 
    point2=(24.5157203674316, -20.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[99])
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[98], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[99], 
    mdb.models['Model-1'].sketches['__profile__'].constraints[299]))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(15.0, -30.0), 
    point2=(20.0, -25.0))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[97], 
    mdb.models['Model-1'].sketches['__profile__'].geometry[100]))
mdb.models['Model-1'].sketches['__profile__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__profile__'].geometry[96], ))
# Save by mofid on 2024_12_20-06.52.16; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Auxetic_Struct', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Auxetic_Struct'].BaseShellExtrude(depth=5.0, 
    sketch=mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Auxetic_Struct-1', part=mdb.models['Model-1'].parts['Auxetic_Struct'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-120.0, -5.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-5.024726, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-10.0, 0.0, -2.5))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-10.0, 0.0, -2.5))
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, -1.0, 0.0), instanceList=('geocell-1', ), number1=1, 
    number2=19, spacing1=35.0, spacing2=10.0)
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, -1.0, 0.0), instanceList=('Auxetic-1', ), number1=1, 
    number2=7, spacing1=55.0, spacing2=30.0)
# Save by mofid on 2024_12_20-06.56.35; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Auxetic_Struct'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -5.0), point2=(
    35.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[101])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[101])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -15.0), point2=(
    30.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, -20.0), point2=(
    25.0624771118164, -20.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[103])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(25.0624771118164, 
    -20.0), point2=(25.0624771118164, -15.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[104])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[103], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[104])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[102], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[103], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[104], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[310], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[313], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[314]))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[101], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -5.0), point2=(
    35.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[105])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[105])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -20.0), point2=(
    30.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, -15.0), point2=(
    25.1055908203125, -15.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[107])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(25.1055908203125, 
    -15.0), point2=(20.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[105], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[106], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[107], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[108]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(25.0, -5.0), point2=(
    25.0, -10.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[109])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[45], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[109])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(25.0, -10.0), point2=(
    30.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, -5.0), point2=(
    30.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[111])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, -25.0), point2=(
    25.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(25.0, -20.0), point2=(
    25.0, -29.7304096221924))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[113])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(25.0, 
    -29.7304096221924), point2=(20.0, -29.7304096221924))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[114])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[113], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[114])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(20.0, 
    -29.7304096221924), point2=(20.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[115])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[114], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[115])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(20.0, -20.0), point2=(
    15.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -25.0), point2=(
    15.0, -10.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[117])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -10.0), point2=(
    15.0, -3.75))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[118])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[117], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[118])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -3.75), point2=(
    20.0, -10.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(20.0, -10.0), point2=(
    20.0, -5.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[120])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -5.0), point2=(
    35.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[121])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[57], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[121])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -15.0), point2=(
    30.0, -9.66451644897461))
mdb.models['Model-1'].sketches['__edit__'].CoincidentConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].vertices[111], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[111])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, 
    -9.66451644897461), point2=(30.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[123])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, -25.0), point2=(
    30.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[124])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[123], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[124])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(30.0, -30.0), point2=(
    35.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -25.0), point2=(
    39.7527618408203, -25.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[126])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(39.7527618408203, 
    -25.0), point2=(45.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(45.0, -30.0), point2=(
    45.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[128])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(10.0, -5.0), point2=(
    10.0, -15.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[129])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[28], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[129])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(10.0, -15.0), point2=(
    15.0, -10.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -10.0), point2=(
    15.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[131])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -25.0), point2=(
    15.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[132])
mdb.models['Model-1'].sketches['__edit__'].ParallelConstraint(addUndoState=
    False, entity1=mdb.models['Model-1'].sketches['__edit__'].geometry[131], 
    entity2=mdb.models['Model-1'].sketches['__edit__'].geometry[132])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -30.0), point2=(
    10.0, -23.75))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(10.0, -23.75), point2=(
    5.29868793487549, -23.75))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[134])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[133], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[134], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[403]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(15.0, -30.0), point2=(
    10.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(10.0, -25.0), point2=(
    5.15171432495117, -25.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[136])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -25.0), point2=(0.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(0.0, -30.0), point2=(
    0.0, -20.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[138])
# Save by mofid on 2024_12_20-07.03.38; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Auxetic_Struct'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].rootAssembly.features['Auxetic_Struct-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'Auxetic_Struct-1', part=mdb.models['Model-1'].parts['Auxetic_Struct'])
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-135.0, -5.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-5.0, 0.0, -2.5))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Auxetic_Struct-1', 
    ), vector=(-15.0, 0.0, 0.0))
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Auxetic_Struct'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[136], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[408]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -25.0), point2=(5.15171432495117, -30.1572093963623))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[139])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -30.1572093963623), point2=(9.57706451416016, -30.1572093963623))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[140])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[139], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[140])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(9.57706451416016, 
    -30.1572093963623), point2=(10.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[139], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[140], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[141], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[419], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[420]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -25.0), point2=(5.15171432495117, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[142])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -30.0), point2=(10.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(10.0, -30.0), point2=(
    10.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[144])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[126], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -25.0), point2=(
    35.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -30.0), point2=(
    40.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -30.0), point2=(
    40.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[147])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[147])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(40.0, -30.0), point2=(
    39.7527618408203, -25.0))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[147], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[443]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(39.7527618408203, 
    -25.0), point2=(39.7527618408203, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[149])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(39.7527618408203, 
    -30.0), point2=(35.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[150])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[150])
# Save by mofid on 2024_12_20-07.07.31; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_12_20-07.07.41; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Auxetic_Struct'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[136], ))
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[126], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[380]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -25.0), point2=(5.15171432495117, -30.0240459442139))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[139])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(5.15171432495117, 
    -30.0240459442139), point2=(10.0, -30.0240459442139))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[140])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[139], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[140])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(10.0, 
    -30.0240459442139), point2=(10.0, -25.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[141])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[140], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[141])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -25.0), point2=(
    35.0, -29.6867389678955))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[142])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, 
    -29.6867389678955), point2=(40.0, -29.6867389678955))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[143])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(40.0, 
    -29.6867389678955), point2=(39.7527618408203, -25.0))
# Save by mofid on 2024_12_20-07.08.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[143], 
    mdb.models['Model-1'].sketches['__edit__'].geometry[144], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[430]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, 
    -29.6867389678955), point2=(40.0, -29.6867389678955))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[145])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[145], 
    mdb.models['Model-1'].sketches['__edit__'].constraints[436]))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(39.7527618408203, 
    -25.0), point2=(39.7527618408203, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[146])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[146], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(39.7527618408203, 
    -25.0), point2=(39.7527618408203, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[147])
mdb.models['Model-1'].sketches['__edit__'].delete(objectList=(
    mdb.models['Model-1'].sketches['__edit__'].geometry[142], ))
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -25.0), point2=(
    35.0, -30.0))
mdb.models['Model-1'].sketches['__edit__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[148])
mdb.models['Model-1'].sketches['__edit__'].Line(point1=(35.0, -30.0), point2=(
    39.7527618408203, -30.0))
mdb.models['Model-1'].sketches['__edit__'].HorizontalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__edit__'].geometry[149])
mdb.models['Model-1'].sketches['__edit__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__edit__'].geometry[148], entity2=
    mdb.models['Model-1'].sketches['__edit__'].geometry[149])
# Save by mofid on 2024_12_20-07.09.17; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].setValues(
    sketch=mdb.models['Model-1'].sketches['__edit__'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.LinearInstancePattern(direction1=(1.0, 0.0, 
    0.0), direction2=(0.0, -1.0, 0.0), instanceList=('Auxetic_Struct-1', ), 
    number1=1, number2=4, spacing1=65.0, spacing2=50.4593)
# Save by mofid on 2024_12_20-07.10.24; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].HomogeneousSolidSection(material='MetaMaterial', name=
    'Section-MetaMaterial', thickness=None)
del mdb.models['Model-1'].sections['Section-MetaMaterial']
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='MetaMaterial', name=
    'Section-MetaMaterial', nodalThicknessField='', numIntPts=5, 
    poissonDefinition=DEFAULT, preIntegrate=OFF, temperature=GRADIENT, 
    thickness=0.4, thicknessField='', thicknessModulus=None, thicknessType=
    UNIFORM, useDensity=OFF)
mdb.models['Model-1'].parts['Auxetic'].Set(faces=
    mdb.models['Model-1'].parts['Auxetic'].faces.getSequenceFromMask((
    '[#ffffffff #7ff ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Auxetic'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Auxetic'].sets['Set-1'], sectionName=
    'Section-MetaMaterial', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Auxetic_Struct'].Set(faces=
    mdb.models['Model-1'].parts['Auxetic_Struct'].faces.getSequenceFromMask((
    '[#ffffffff:2 #7fffff ]', ), ), name='Set-1')
mdb.models['Model-1'].parts['Auxetic_Struct'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Auxetic_Struct'].sets['Set-1'], sectionName=
    'Section-MetaMaterial', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Honeycomb'].sectionAssignments[0].setValues(
    sectionName='Section-MetaMaterial')
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].interactions['Int-1']
mdb.models['Model-1'].ContactExp(createStepName='Initial', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Initial', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'IntProp-1'), ), stepName='Initial')
mdb.models['Model-1'].boundaryConditions['BC-1'].suppress()
del mdb.models['Model-1'].boundaryConditions['BC-1']
del mdb.models['Model-1'].boundaryConditions['BC-2']
del mdb.models['Model-1'].boundaryConditions['BC-3']
del mdb.models['Model-1'].boundaryConditions['BC-4']
del mdb.models['Model-1'].boundaryConditions['BC-5']
# Save by mofid on 2024_12_20-07.15.20; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-19'].edges.getSequenceFromMask(
    ('[#0:2 #2000000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-19'].faces.getSequenceFromMask(
    ('[#98000000 #23 ]', ), ), name='Set-honeycomb_b')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-honeycomb_b'])
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-7'].edges.getSequenceFromMask(
    ('[#0 #40000 ]', ), ), faces=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-7'].faces.getSequenceFromMask(
    ('[#60318000 #303 ]', ), ), name='Set-auxtric')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-auxtric'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic_Struct-1-lin-1-4'].faces.getSequenceFromMask(
    ('[#1f80 #3f8000 #7c1c0 ]', ), ), name='Set-Auxtric_struct')
mdb.models['Model-1'].EncastreBC(createStepName='Step-1', localCsys=None, name=
    'BC-3', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Auxtric_struct'])
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-honeycomb', nodes=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].nodes.getSequenceFromMask(
    mask=('[#55500500 #9505 #1a0000 #7dc0400e #7fc7000 #1e0000 #1e001c0', 
    ' #6c000 #df00099f #fe0f801f #ffc003 #f000fff0 #ffe01 #7f8003fe', 
    ' #1400f80 #7c000040 #3f0007f8 #e8001ff0 #1f20001 #7f802e #62', 
    ' #cc000000 #8000 #140000 #c3c7c3c0 #7bffff01 #ffff7fa7 #7fff9ffe', 
    ' #fefe007e #b000b3f9 #f9fcfffe #e71fffff #ad07fffc #f53fbfbf #71fcfcf', 
    ' #fcffffc0 #fffa0381 #f80187ff #fff073bf #7f3f #e1fc #e7fffe00', 
    ' #ffc00003 #8ee8006 #1 #8 #7fff0 #6eff000 #1c1e1e00', 
    ' #6000 #11e00000 #0 #1d7e0000 #e0ff0000 #0 #40000001', ' #0 #c ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-2'].nodes.getSequenceFromMask(
    mask=(
    '[#45515553 #f0000000 #7f8003f #ff801efe #3ffc003 #1df807c0 #41c07f00', 
    ' #4001 #fc000ffc #fe0f8005 #8f0003 #a0003fe0 #66801 #1e000000', 
    ' #1000f80 #18000000 #2f0007f8 #1040 #0:5 #c0000000 #fffff', 
    ' #8067ffc0 #27fffff #7f7f7f80 #ebf8000 #f0000001 #ffe004ff #e000001f', 
    ' #3c000dff #c000383c #0 #8279c0 #3bf80000 #f8000000 #18000003', 
    ' #30 #18 #0 #4000000 #0:3 #3e0 #3f000', ' #0:4 #40000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-3'].nodes.getSequenceFromMask(
    mask=('[#414553 #f0000000 #7f0000f #fc001ff8 #788003 #3c00740 #1007c00', 
    ' #1 #c000330 #e0f0000 #0:4 #600 #0:8 #40000000', 
    ' #0 #c7c0 #387f #0 #180000 #80000000 #1e00001', 
    ' #e0000000 #47 #0:4 #40000000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-4'].nodes.getSequenceFromMask(
    mask=('[#10 #80000000 #5c0000f #1000 #0:2 #3000 #0:18', ' #40 ]', ), ))
mdb.models['Model-1'].parts['Auxetic'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Auxetic'].generateMesh()
# Save by mofid on 2024_12_20-07.22.12; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Auxetic_Struct'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Auxetic_Struct'].generateMesh()
# Save by mofid on 2024_12_20-07.22.27; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-Auxtrict', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1'].nodes.getSequenceFromMask(
    mask=(
    '[#13743403 #a4545110 #780077f0 #8000c041 #1fe0f1c3 #f3f37005 #e0f1c00f', 
    ' #18001fc3 #7007fc00 #5c007fc #7003e007 #7f1c70 #1c0c30c0 #700007fc', 
    ' #3e2607c #3fc01ff #fc700180 #7fffff87 #f1c19c3e #fffffe1f #c714fdff', 
    ' #80000003 #71c018 #4000000 #7e031c10 #1df60 #c000016e #7fffffff', 
    ' #ee2 #1c0 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-2'].nodes.getSequenceFromMask(
    mask=('[#140000 #10000 #c000c00 #0 #46000000 #1c1c00 #0:5', 
    ' #1000000 #50 #0 #c001800 #c0 ]', ), ))
del mdb.models['Model-1'].rootAssembly.sets['Set-node']
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-Auxtrict-Struct', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic_Struct-1'].nodes.getSequenceFromMask(
    mask=('[#0 #2004024 #14 #24120000 #1001 #0:3 #c001b800', 
    ' #860430d8 #100007 #0 #8 #4c4408 #0:5 #a040000', 
    ' #ee105fc6 #c32c0003 #780 #0:6 #c07c0000 #1fddecdb #6', 
    ' #100000 #ddf1e00 #0:4 #3ffd7c00 #500003f4 #38f ]', ), ))
# Save by mofid on 2024_12_20-07.25.38; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-Auxtrict'], u1=UNSET, 
    u2=-17.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-5', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-Auxtrict'], u1=UNSET, 
    u2=-17.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].boundaryConditions['BC-4'].setValues(region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-Auxtrict-Struct'])
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-6', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-honeycomb'], u1=UNSET, 
    u2=-17.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
# Save by mofid on 2024_12_20-07.27.04; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_12_20-07.27.11; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.jobs['Job-8']
del mdb.jobs['Job-7']
del mdb.jobs['Job-1']
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-1', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, numThreadsPerMpiProcess=1, queue=None, 
    resultsFormat=ODB, scratch='', type=ANALYSIS, userSubroutine='', waitHours=
    0, waitMinutes=0)
mdb.jobs['Job-1'].submit(consistencyChecking=OFF)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *ENRICHMENT, file "Job-1.inp", line 8705: Unknown assembly set _PICKEDSET19', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ENRICHMENT KEYWORD IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ANALYSIS WILL BE TERMINATED', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].rootAssembly.features['load_plate-1']
mdb.models['Model-1'].parts['Auxetic'].features['Shell extrude-1'].setValues(
    depth=20.0)
mdb.models['Model-1'].parts['Auxetic'].regenerate()
mdb.models['Model-1'].parts['Auxetic'].features['Shell extrude-1'].setValues(
    depth=40.0)
mdb.models['Model-1'].parts['Auxetic'].regenerate()
mdb.models['Model-1'].parts['Auxetic_Struct'].features['Shell extrude-1'].setValues(
    depth=40.0)
mdb.models['Model-1'].parts['Auxetic_Struct'].regenerate()
mdb.models['Model-1'].parts['Honeycomb'].features['Shell extrude-1'].setValues(
    depth=40.0)
mdb.models['Model-1'].parts['Honeycomb'].regenerate()
# Save by mofid on 2024_12_20-07.31.21; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
# Save by mofid on 2024_12_20-07.31.44; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['Honeycomb'].generateMesh()
mdb.models['Model-1'].parts['Auxetic'].generateMesh()
mdb.models['Model-1'].parts['Auxetic_Struct'].generateMesh()
# Save by mofid on 2024_12_20-07.32.28; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].boundaryConditions['BC-4']
del mdb.models['Model-1'].boundaryConditions['BC-5']
del mdb.models['Model-1'].boundaryConditions['BC-6']
# Save by mofid on 2024_12_20-07.33.37; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName='Set-Nodal-Auxtrict'
    , toName='Set-Nodal-Auxetic')
mdb.models['Model-1'].rootAssembly.sets.changeKey(fromName=
    'Set-Nodal-Auxtrict-Struct', toName='Set-Nodal-Auxetic-Struct')
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-Auxetic', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1'].nodes.getSequenceFromMask(
    mask=('[#53403401 #1500005 #ffff81f5 #ffee000 #1ffff #ff800000 #fff8003f', 
    ' #fffc703f #f7ffc007 #3ffff0f #ffff00 #e803fffe #c001fff #c001ffff', 
    ' #37ffffff #1ffffe0 #1fffc00 #f003fff8 #1c01f #e0000000 #7', 
    ' #0:3 #10 #fff00000 #ffff001 #c00fffe0 #7ff8007f #fffc0e00', 
    ' #1fffc006 #1fffc0 #fffc0003 #ff80007f #f1c70077 #ffffffe7 #ffffffff:3', 
    ' #381f0fe7 #fffff800 #3fffffff #d824b200 #92496 #180e0782 #e0c00020', 
    ' #e0783e1 #e0602018 #80 #fffffff0 #e001ffff #ffffffff #ffc007ff', 
    ' #efffffff #ff7f8007 #ffffffff:2 #f7ffffff #7f3bffbf #e00180f0 #ffffffff', 
    ' #fa00ffff #ffffffff #ff9f0dff #ffffffff:4 #ff8041e3 #ffffffff #ffff004f', 
    ' #3ffffff #fffffe00 #37f7ff #fffffffc #ffffffff #7dffffff #78fffbe', 
    ' #3 #ffffe000 #1bfff #ffffffc0 #8000137f #ffffffff:3 #1fcfffff', 
    ' #c #fffffc00 #37fffff #0:2 #60000000 #10000c0 #2', 
    ' #0:12 #c0000000 #ffffedf6 #3fb #0:6 #ec093692 #ffffffff', 
    ' #fff8deff #3ffffff #fffff000 #1ffff #ffffffe0 #ffffffff:2 #c3fdffff', 
    ' #e07 #48040000 #da6da #fffffe00 #1fbf #ffffffc0 #c0ffffff', 
    ' #ffffffff #f801ffdf #ffffffff #fff800ff #dfffffff #ff1f83c4 #fffffffe', 
    ' #ffffffff:2 #703f17ef #fffe0080 #ffffffff:3 #1038fdf #f0000000 #fdffffff', 
    ' #ffe00000 #1ff7fff #ffffc000 #7ffffff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-7'].nodes.getSequenceFromMask(
    mask=('[#14000402 #e0004400 #7fffff #0:8 #3fe00000 #300 #0:15', 
    ' #ff8000 #0 #fffffe0 #0 #7ff800 #0:13 #7fffe00', 
    ' #0 #38000 #0 #e0000000 #fb #0:2 #7fff00', 
    ' #0:12 #f3f3f3f0 #e3e3e3e3 #c3c3c3c3 #f3e383c3 #e3e3e3e3 #63', 
    ' #0:40 #fffffe00 #bfdfefff #fcfe7f3f #fffff1f8 #feffffff #7bfd', 
    ' #0:97 #f0000000 #ffffffff #fbfdfeff #ffcfe7f7 #ffffffff #80f8f', 
    ' #0:9 #ffffff80 #ffffffff:2 #60607e7f #0:110 #80000000 #ffffffff:2', 
    ' #cbfffff #0:9 #1c000000 #e7d861c7 #71e79e79 #0:21 #fff00000', 
    ' #3fffffff #8 #0:7 #ffffffc0 #ffffffff #dfff #0:34', ' #404 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-8'].nodes.getSequenceFromMask(
    mask=('[#14000403 #f000c400 #7ffff #0:2 #380f8 #0:5 #ffe00000', 
    ' #3ff #0:15 #ff8060 #0 #ffffc00 #0 #7f8000', 
    ' #ff #0:12 #3ffe00 #0 #3f000 #0 #e0000000', 
    ' #1f #0:2 #7ff000 #1e000 #1f #0:10 #fffffffc', 
    ' #fbffffff #fffffbfb #3fffffff #e #0:41 #fffffe00 #ffffffff:2', 
    ' #dfffffff #180 #0:90 #60000000 #39c21084 #318c67 #0:5', 
    ' #f0000000 #ffffffff:2 #7fbfffff #8c #0:10 #ffffff80 #ffffffff', 
    ' #607f7f #0:10 #2010080 #4 #0:99 #80000000 #ffffffff', 
    ' #879fff #0:10 #ff800000 #ffffffff #1 #0:7 #6030000', 
    ' #20100c #0:12 #fff00000 #3 #0:8 #ffffffc0 #4f', 
    ' #0:22 #383838 #0:11 #c0000000 #707 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-9'].nodes.getSequenceFromMask(
    mask=('[#54000403 #f0000000 #3fff #0:2 #63ffc0 #0:5 #ffff0000', 
    ' #1f #0:15 #ff81e0 #0 #fff8000 #0 #f0700000', 
    ' #3 #0:12 #1fe00 #0 #fc03f000 #1 #0:5', 
    ' #80000 #0:11 #fffffffc #ffffffff #45ffffff #0:9 #60000000', 
    ' #9ef4318c #39ce73 #0:31 #fffffe00 #ffffffff #1cfeffff #0:80', 
    ' #2020 #0:11 #e0000000 #ffffffff #10 #0:5 #f0000000', 
    ' #ffffffff #3c3f9ff #4 #0:11 #7fffff80 #7c #0:11', 
    ' #381e0f0 #0:100 #80000000 #39f #0:11 #ff800000 #1c7', ' #0:8 #703f000 ]', 
    ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-2'].nodes.getSequenceFromMask(
    mask=(
    '[#53551553 #54500005 #3bffff5 #ffb00000 #ffe007ff #ffffc01f #eff80000', 
    ' #60c7000 #3ff00000 #7fff0 #f003fff8 #ffe00fff #1c00007f #1fff', 
    ' #fffffc #3ffe0 #1ffc00 #f0000ff8 #1c01f #0:7 #3ff000', 
    ' #c0003fe0 #7f #1fff8800 #7fff00 #1c00fffe #dffc01ff #ff800001', 
    ' #f1c70000 #ffffffff #7feffdff #7c3f93ff #c0 #0 #ffffff80', 
    ' #7fb #ffffffff #fe00006f #ffffffff:2 #f1ffffff #0:2 #7ffffff0', 
    ' #e0000002 #ff3fff #ffc00000 #1fdff #f0e00000 #fffffff9 #effdbfdf', 
    ' #603c1fc #0 #fc000000 #3f7fffff #fff80000 #27fffff #fffff000', 
    ' #ffffffff:2 #1038fdf #0 #ff800000 #13ffff #ffff0000 #3fff', 
    ' #fffffe00 #9 #fffffffc #3f3fffff #41e #0:2 #7fffe000', 
    ' #13 #7ffffc0 #80000000 #ffffffff #3fffffff #180f07f #0:2', 
    ' #fffffc00 #df #0:26 #10000000 #369b6920 #fff80000 #ff', 
    ' #7f7ff000 #0 #ffffffe0 #f77ff7fe #381f0b #0:4 #6c76c00', 
    ' #0 #effffffc #f800003f #6fffffff #fff00000 #4dfffff #ffffe000', 
    ' #fffff #ffffffc0 #ffffffff #f1ffffff #180 #0 #fffe0000', 
    ' #fdf3ffff #e1f7f7e #0:2 #f0000000 #3ffb #ffe00000 #3f', 
    ' #ffffc000 #1ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-3'].nodes.getSequenceFromMask(
    mask=('[#53541453 #54100005 #7fff5 #fc000000 #7fe0001d #3ffc000 #3b80000', 
    ' #7000 #3c000000 #0 #f0000fe0 #bfe0003f #1c000001 #7f', 
    ' #fff00 #7fe0 #7c00 #f0000038 #1c01f #0:7 #f000', 
    ' #60 #70 #3f8000 #7ff00 #1c0003fe #7fc01ff #1800000', 
    ' #f1c70000 #fe7fffff #301e0 #0:3 #1ff7f80 #0 #13f7ff', 
    ' #fe000000 #efffdf3e #81c7 #0:3 #1ff0 #e0000000 #3f', 
    ' #400000 #0:6 #d8000000 #d8e #eff80000 #9f #f7fff000', 
    ' #e3f7ffb #4 #0:2 #ff000000 #4 #fff0000 #0', 
    ' #9ffe00 #0 #e3f7fffc #40 #0:3 #e000 #0', 
    ' #1c0 #80000000 #3c1fcff #6 #0:3 #37fc00 #0:29', 
    ' #300000 #0 #1000 #0 #c0402000 #0:8 #7fffc', 
    ' #f8000000 #4dfff #fff00000 #1ff #ffffe000 #3 #ffffffc0', 
    ' #f87f3ff #1c #0:2 #7cfe0000 #18 #0:5 #3e00000', ' #0 #9fc000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-4'].nodes.getSequenceFromMask(
    mask=('[#100052 #54000000 #1fc0 #60000000 #1e00000 #1c000 #0:4', 
    ' #e0000000 #e00000 #0:17 #78000 #1f00 #1c00000e #1f0', 
    ' #0:2 #6 #0:6 #4 #0:18 #200000 #0', 
    ' #1000 #0:67 #7c #38000000 #0 #700000 #0', ' #c000 #0 #6000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-6'].nodes.getSequenceFromMask(
    mask=('[#14000002 #4400 #1ffffff8 #0:8 #7e00000 #0:16 #3f8000', 
    ' #0 #ffffffe #0 #7e1fc0 #0:13 #fffffe00 #0', 
    ' #20000 #0 #e0000000 #0:3 #7ffff8 #0:12 #83838380', 
    ' #3030383 #2030303 #20202 #2000000 #2030303 #202 #0:39', 
    ' #f87c3e00 #83c1e0f0 #c0e0703 #40203018 #80 #e0703838 #30180c0', 
    ' #2 #0:95 #f0000000 #1f8fc7e7 #f87c3e3f #83c1e1f0 #fc0e0f07', 
    ' #c3e3f1f8 #180f87 #0:8 #ffffff80 #ffffffff #ffff7f7f #ffffffff', 
    ' #707fffff #0:109 #80000000 #ffffffff:3 #c7ffffff #1 #0:7', 
    ' #10000000 #0 #41000000 #410 #0:20 #c300000 #cf3c30c3', 
    ' #1c71c73 #0:7 #ffffffc0 #ffffffff:2 #c0cfff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-10'].nodes.getSequenceFromMask(
    mask=('[#503 #f0000000 #1ff #0:2 #7ff800 #0 #7f80', 
    ' #0 #3c0000 #0 #fff80000 #1 #0:13 #7c', 
    ' #0 #ff83e0 #0:38 #fffffffc #43cffff #0:10 #fc000000', 
    ' #1fffffff #0:6 #80000000 #1010181 #1 #0:10 #e0e0000', 
    ' #e #0:11 #fffffe00 #27ff #0:81 #e3e0 #0:11', 
    ' #e0000000 #1ff #0:6 #80000000 #403c1f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-11'].nodes.getSequenceFromMask(
    mask=('[#11 #f0000000 #f #0:2 #7f8000 #0 #7e6000', 
    ' #0 #1000000 #0:57 #41cfc #0:11 #fc000000 #18f', ' #0:6 #f8000000 #1c1 ]', 
    ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-3'].nodes.getSequenceFromMask(
    mask=('[#0:46 #c00000 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-4'].nodes.getSequenceFromMask(
    mask=('[#0 #400 #0:28 #6000 #0:15 #ffff0000 #3ff', 
    ' #0:6 #1f8000 #0:291 #70787870 #60607070 #40406060 #4040', 
    ' #60600000 #40406060 #40 #0:39 #c7c7c7c0 #c1c3c3c3 #c0c0c1c1', 
    ' #404040 #c1c3c000 #c0c0c1c1 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-5'].nodes.getSequenceFromMask(
    mask=('[#4000000 #4400 #600 #0:25 #8000 #f8000000 #fefffff', 
    ' #0:15 #fffffc00 #f #0:6 #7ff01f #0:161 #f0000000', 
    ' #381c1e0 #180c0e07 #80406030 #20100 #c0000000 #6030180 #100804', 
    ' #0:7 #7c7e7e00 #78787c7c #60707078 #40406060 #78780000 #60707078', 
    ' #60 #0:108 #7e7e7f7f #7c7c7e7e #78787c7c #7e7c7878 #7c7c7e7e', 
    ' #c #0:32 #10000 #0:7 #ffffffc0 #dfffffff #cfcfdfdf', 
    ' #ffffffff #1ffffff ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-Auxetic-Struct', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic_Struct-1'].nodes.getSequenceFromMask(
    mask=('[#65555553 #4155000 #35354000 #45555 #f5555400 #f80003ff #1ffffff', 
    ' #fc03fff8 #ffe001ff #1fffc01f #3ffe00 #e000fff0 #1ff0007f #ffe00', 
    ' #fe000fff #ffc0001f #ffff03ff #1fff8000 #fc01fffe #7fff03ff #807fffc1', 
    ' #ff80ffff #fe0007ff #fffc05ff #1fffe005 #80fffff0 #7fff03 #ff80fffc', 
    ' #ffe403ff #fff8000f #7fff807 #ffe1ffff #3ffc003f #3fff00 #0', 
    ' #e0000000 #fff007ff #fff98007 #fff1c03f #fffe0007 #fe001fff #1ffc00ff', 
    ' #fffc0000 #7fe000ff #1ff000 #ff000ffe #3ffe0003 #7fff000 #1fff80', 
    ' #ffffe00f #ffe003ff #3fffe03f #fc07ffe0 #fffc00ff #fff60000 #ff003c07', 
    ' #7ffc01f #0 #6000 #fe00fffc #ffcc00ff #ff8780ff #7f1c017', 
    ' #f8005ffc #efc0005f #fffe001 #f01fc700 #fff80fff #ffff3007 #7ffff', 
    ' #fffffe00 #11dfffff #ffe00000 #f8007fff #ffffffff #1fff #ffffff80', 
    ' #7ff #ffffffff #7fff #fffff000 #7ffff #ff000000 #7ffff', 
    ' #fffe0000 #7f800007 #bfffc00 #ffff0000 #fff #7fffe00 #fff8000', 
    ' #fffff9fc #ffffffff:3 #783f1ff #fffe0008 #ff8fffff #fffffd07 #ffff83ff', 
    ' #fffdffff #fb1dffff #ffffffff #fffc37df #ffffffff:3 #7fffffff #f0000c1e', 
    ' #ffffffff #ffe001ff #ffffffff #3faf #1ffffffe #ffffff80 #7fffffff', 
    ' #fff80006 #fff9ffff #3fff8000 #fff0fffc #fe1fff87 #c3fff0ff #ffffffff', 
    ' #23fffff #fffffc00 #7fffff #ffc3fff8 #fff8001f #3fffffff #ff8ffff8', 
    ' #f1ffffff #fffe4fff #ffffffff #fffffe09 #ffffc07f #8008017f #924', 
    ' #0:5 #f6000000 #924db6 #ffff0000 #7fffffff #f0000001 #3ffff', 
    ' #fffffffc #23bfffff #ffffc000 #5ffffff #ffffff80 #ffffe001 #2fffffff', 
    ' #fe000000 #1bffffff #fffc0000 #ff00000f #7ffff #fffe0000 #7f800007', 
    ' #bfffc00 #ffff0000 #ff #fffffe00 #11ff #ffe00000 #1fffffff', 
    ' #1 #fffffffe #fc000003 #ffffffff #33f #81fff800 #ffff8fff', 
    ' #ffffffff #d43fffc0 #7ffffff #fc807ffe #ffffffff #c0fffc0d #7ffe0fff', 
    ' #ff07ffe0 #f1fff83f #ffffffff #ffe00037 #ffffffff #7ff #5ffffea0', 
    ' #ffffc005 #924001ff #fffedb6d #0:3 #4000000 #1020e #db680000', 
    ' #7fffffe #fffffc00 #ffffffff #ffc00001 #f00001ff #ffffffff #ffe001bf', 
    ' #ffffffff #fff #7bffffe #ffffff80 #3fdf #fc07ff80 #1ffe03f', 
    ' #7ff00ffe #f803ff00 #ffffffff #c0000007 #e5ffffff #f #ffffc00', 
    ' #ffff0000 #effffc #f0000000 #3ffe7ff #ffe00000 #ffffffff #e7ffffff', 
    ' #183 #fc000000 #fffff #f9ffffff #fe00007f #7ffff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic_Struct-1-lin-1-2'].nodes.getSequenceFromMask(
    mask=('[#e4411553 #55915554 #15355555 #55565401 #f5455545 #1 #ffe0', 
    ' #fc0001f8 #7e00000 #7c000 #e00 #40 #0 #600', 
    ' #4000003 #0 #3ffffb #ff000000 #efc000f3 #5fe001 #f8001ff0', 
    ' #7ff0007f #fe000003 #3fc0001 #7e000 #80003cc0 #fffc0003 #ff80007f', 
    ' #3fc0001 #1ffe000 #e001ff00 #ff0007f #7f8e00 #e0001fc0 #ffc00003', 
    ' #f8000003 #1f00001 #ff98000 #1f1c000 #f8000000 #7e00000f #40000', 
    ' #0:5 #3f000 #780 #ff80000f #ffc0000 #ff800 #7f8003ff', 
    ' #3ff000 #1fff800 #ffc3c00 #3fe00 #fc0007f7 #c000003f #3f80003f', 
    ' #3fc80000 #f878000 #731c000 #7800007c #c00000 #3e000 #f01fc700', 
    ' #1f80003 #ff3000 #0 #11ffe00 #0 #7e00000 #f8000000', 
    ' #1f #0 #9f80 #0 #17f #0 #1000', 
    ' #0:9 #28000 #fffffffc #f0fe7fff #301 #0:2 #fe7fe000', 
    ' #1f #bfcfc0 #3ffff000 #fffc0000 #ff000003 #ef7f #fffe0000', 
    ' #f9f7ffff #70fbe #0:2 #f0000000 #77f #ffe00000 #1ff', 
    ' #0 #1fe #477ff880 #0 #ffe00000 #7 #7e000000', 
    ' #c003f800 #ff001f #ffc007f8 #33fff #0 #1fffc00 #0', 
    ' #7c001f8 #fffffe00 #1 #ffe003fc #f800001f #ffffc007 #13f', 
    ' #7ff80 #1ffe000 #fff80000 #1f #3ffff000 #7f #0:3', 
    ' #ff800000 #0 #3ff0000 #0 #30000000 #0 #3ffffc', 
    ' #0 #3fffc000 #0 #1f80 #7fe000 #0 #7e000000', 
    ' #0:11 #1800000 #0:2 #e #fc000000 #23 #0', 
    ' #1e00000 #ffffff00 #f #ff001fe0 #c00000ff #fffe001f #3f', 
    ' #e0007c00 #3f0003 #fc001f8 #f000fe00 #ff #ffe00000 #2f', 
    ' #0 #1fe #7fff80 #ffffe000 #1b #ffffffc0 #71ffffff', 
    ' #0:3 #fffe0000 #0 #5fffc00 #0:2 #f0000000 #7ff', 
    ' #ffe00000 #7f #0 #1fe #4ef00 #0 #30000', 
    ' #1800030 #40000c00 #20000 #80 #c0000000 #0:3 #c0000', 
    ' #0 #30000000 #0 #fc00000 #7 #0:2 #fc000000', ' #2 #7ff #7e000000 #1 ]', 
    ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic_Struct-1-lin-1-3'].nodes.getSequenceFromMask(
    mask=('[#0 #40 #0:17 #4000 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='Set-Nodal-honeycomb', nodes=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].nodes.getSequenceFromMask(
    mask=('[#41501100 #5541155 #0:2 #ffffffff #c000ffc1 #ffffff7f #fff', 
    ' #ffffffff #1ffffff #fffffe00 #1fffff #fe000000 #3c0003ff #fffffff0', 
    ' #f07fffff #ffffff83 #ffffff #ffffffc0 #fffff #0 #3c002000', 
    ' #ffff8000 #ffffffff #ffe0003f #ffffffff:2 #fffff #3c0 #0:3', 
    ' #ff800000 #ffffe000 #f00000ff #fffff801 #ffffffff #fffc0003 #ffffffff', 
    ' #fe00003f #ffffffff #f83e01ff #ffe00007 #ffffffff #ff00003f #ffffffff', 
    ' #1f #0 #cf000000 #fe000001 #1fffffff #fe000000 #1f', 
    ' #0 #80000000 #1c003f #0 #ffffffff #7f #fffffffe', 
    ' #f00000ff #ffffffff #ff01ff #fffff000 #7ffffff #ffff8000 #fffffff', 
    ' #0 #4040404 #40c0c0c #0:2 #4040400 #c0c0c04 #1c1c1c0c', 
    ' #3c3c1c1c #7c7c3c3c #fcfc7c7c #7dfcfcfc #1c #fffffe00 #fbffffff', 
    ' #ffffffff:3 #9fffffff #ffffffff #87fff #fffffe1e #ffffffff:10 #c7ffffff', 
    ' #fffe0e07 #ffffffff:8 #ffffe3fd #ffffffff #e1fdffff #81010181 #1', 
    ' #0:7 #80400000 #6030100 #78381c0c #c3e1e0f0 #3f1f8f87 #2', 
    ' #fff00000 #ffffffff:6 #ffffff7f #f7c3ffff #ffffffff:11 #3fffffff #ff80070f', 
    ' #ffffffff:7 #39c #3038080 #e3e2e303 #ffffdfc3 #f3f3fbfb #f3f3ebf3', 
    ' #c3c3e3e3 #fbfbfbc7 #e3e3f3f3 #8383c3c3 #c3e3e3b3 #8383c3c3 #20303', 
    ' #7cfcfcfc #fdfcfc7c #fcfcfdfd #ffffffff #fdfdffff #fdfdfdff #fdfcfcfd', 
    ' #fdffffff #fcfdfdfd #fdfcfcfc #fcfcfdfd #40cec #fc000000 #ffffffff:12', 
    ' #feffffff #fc7f3f9 #fffffffc #ffffffff:7 #fff83fff #ffffffff #27ffffff', 
    ' #0 #c0000000 #87ffef7b #398c6318 #ef7b9ce7 #ffffffbd #ffffffff:2', 
    ' #1fffffff #0:9 #8000000 #c0602010 #7030180 #78381c0e #c0', 
    ' #0:13 #80000000 #fcfe7fff #dfeff3f9 #ffff7fbf #ffffffff:5 #fe7effff', 
    ' #ffffffff:2 #123ff #0:2 #fffffc00 #ffffffff:6 #1bde #fffffe00', 
    ' #ffffffff:9 #dfffffff #ffffffff #3f9fffff #40 #fff00000 #ffffffff:9', 
    ' #cfffffff #80e0f #0 #fffff000 #ffffffff:9 #fffffff7 #efffffff', 
    ' #20e7 #fffffff0 #ffffffff:6 #3ff #fffffff8 #ffffffff:9 #8787f7ff', 
    ' #70787 #f8000000 #ffffffff:10 #181f7 #0 #fff80000 #ffffffff:4', 
    ' #89dfffff #0:17 #18208208 #8e186186 #e79e38e3 #fbef9e79 #2', 
    ' #0 #f87c1e00 #8fc7e3f0 #fdfe7f3f #fffff7fb #ffffffff:6 #7e3fdfff', 
    ' #100fc #0:7 #8000000 #c3082082 #0:15 #c0000000 #ffffffff:5', 
    ' #ff8fffff #ffffffff #fbffffff #204081 #0:2 #87070700 #c7878787', 
    ' #e7c7c7c7 #f7e7e7e7 #fff7f7f7 #ffffffff:3 #c7ffffff #307 #0:2', 
    ' #8000000 #18180808 #78383818 #f8f87878 #f9f9f8f8 #fbfbfbf9 #ffffffff:3', 
    ' #707 #0:3 #fff80000 #ffffffff:4 #fffffe3f #ffffffff #2047fff', 
    ' #0:3 #ff000000 #ffffffff:6 #bfffffff #18f3e7c7 #0:2 #e0000000', 
    ' #ffffffff:8 #1ffff #0:2 #fffffffc #ffffffff:8 #e3ffffff #203', 
    ' #0 #fc000000 #ffffffff:8 #e7ffffff #387 #0:2 #fffc0000', 
    ' #ffffffff:6 #fffffff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-2'].nodes.getSequenceFromMask(
    mask=('[#1555150 #5500155 #0:2 #fffc0 #1c0000 #fffffff8 #7fffff', 
    ' #ffffff00 #3ffffff #ffffe000 #7ff #0 #7c000000 #fffffe00', 
    ' #7fffffff #ffffe000 #7fffffff #fffffe00 #7fffffff #fffe0000 #ffffffff', 
    ' #fff00003 #ffffffff #ffc0003f #ffffffff:2 #3fef #200 #0:3', 
    ' #3800000 #fc000000 #f0000003 #fffe0001 #ffffffff #ff800003 #ffffffff', 
    ' #3f #fffffffe #f83e01ff #ff800007 #ffffffff #fc00003f #ffffffff', 
    ' #1f #0:2 #e0000000 #1fffffff #0:3 #80000000 #3f', 
    ' #0 #3fffe0 #1f #ffffff80 #ff #fffffffe #ff01ff', 
    ' #fffc0000 #7ffffff #fff00000 #fffffff #0:8 #4040000 #c0c0404', 
    ' #c1c0c0c #0 #9c000000 #217bde73 #18c61084 #ce739ce3 #ffbdef7b', 
    ' #ffffffff:2 #7ffffff #fe000000 #ffffffff:7 #f3ffffff #ffffff8f #ffffffff', 
    ' #101f1ff #0 #f9fe0000 #fdfdfdfd #ffffffff:6 #fffe3fff #ffffffff', 
    ' #1c5f7ff #0:16 #fff00000 #ffffffff:6 #2739ff #fff80000 #ffffffff:9', 
    ' #fffffdff #ffffffff #1071ff #fffff800 #ffffffff:6 #1ffff #fffffc00', 
    ' #ffffffff:9 #c3fbffff #383c3c3 #0 #fffffffc #ffffffff:9 #c0fbff', 
    ' #0 #fc000000 #ffffffff:12 #807e3f #0 #9f9f9f00 #ffdfdfdf', 
    ' #ffffffff:7 #21e1ffff #0:5 #8421000 #7398c631 #def7b9ce #fffffffb', 
    ' #18 #0:27 #80000000 #3c1e0f03 #c3e1f078 #7e3f0f87 #e7f1f8fc', 
    ' #ff3f9fcf #f7fbfdfe #ffffffef #ffffffff:3 #20 #0:3 #fffffc00', 
    ' #ffffffff:3 #fffe7fff #ffffffff #7 #0 #fffffe00 #ffffffff:10', 
    ' #1e0ff #0:2 #fff00000 #ffffffff:7 #8fefffff #f8fcfcf #c', 
    ' #0:2 #fffff000 #ffffffff:9 #73ffffff #10 #0 #fffffff0', 
    ' #ffffffff:5 #c639dfff #0 #fffffff8 #ffffffff:8 #c7ffffff #407', 
    ' #0 #f8000000 #ffffffff:8 #cfffffff #f0f #0:2 #fff80000', 
    ' #ffffffff:4 #7fff #0:19 #20820800 #0:4 #80c02010 #1c0e0301', 
    ' #c1e0f078 #7e3f0f87 #e7f3f8fc #ff7fbfcf #ffffffff:2 #703fdff #0:26', 
    ' #c0000000 #ffffffff:4 #ff1fffff #ffffffff #b1ffffff #0:5 #4040400', 
    ' #6060604 #87070706 #c7878787 #e7c7c7c7 #f7e7e7e7 #787f7f7 #6', 
    ' #0:6 #8000000 #18180808 #38383818 #f8787878 #1e1f8f8 #0:5', 
    ' #fcf80000 #ffdfbf7e #ffffffff:4 #4f9ff #0:4 #ff000000 #ffffffff:3', 
    ' #ffe7bfff #ffffffff #73ffffff #0:4 #e0000000 #ffffffff:6 #4fffff', 
    ' #8 #0:3 #fffffffc #ffffffff:7 #383ffff #2030303 #0:2', 
    ' #fc000000 #ffffffff:8 #40787e #0:3 #fffc0000 #ffffffff:4 #ffffdfff', 
    ' #30ffffff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-3'].nodes.getSequenceFromMask(
    mask=('[#1555050 #5500155 #0:4 #ffffff80 #778003 #ffffc000 #383ffff', 
    ' #7ff80000 #0:2 #7c000000 #fffc0000 #7fffffff #ffffc000 #7fffffff', 
    ' #ffffc000 #7fffffff #fff80000 #ffffffff #ffc00003 #ffffffff #f000003f', 
    ' #ffffffff #fffffe03 #3ff #0:6 #f0000000 #fe000001 #fffffff7', 
    ' #e0000003 #ffffffff #3f #ffffff80 #f83e01ff #e0000007 #ffffffff', 
    ' #8000003f #ffffffff #1f #0:3 #1fffc #0:4 #3e', 
    ' #0:2 #3 #fffff800 #ff #ffe7fc00 #ff01ff #fff80000', 
    ' #7ffffff #fc000000 #fffffff #0:15 #42100000 #318c6108 #bce739c6', 
    ' #3ffbdef7 #0 #1e000000 #3e3e3e1e #fe7e7e7e #fffefefe #ffffffff:6', 
    ' #1f1f1 #0:2 #c1c00000 #e1e1e1c1 #f1f1f1e1 #f9f9f9f1 #fdfdfdf9', 
    ' #fffffffd #ffffffff:3 #c1f1ff #0:17 #fff00000 #ffffffff:3 #d8ffffff', 
    ' #ffffffff #1fff #0 #fff80000 #ffffffff:8 #ffffdfff #ffffffff', 
    ' #38 #0 #fffff800 #ffffffff:5 #9cefffff #63 #fffffc00', 
    ' #ffffffff:9 #203e3 #0:2 #fffffffc #ffffffff:8 #787e7 #0:2', 
    ' #fc000000 #ffffffff:10 #c1ff7fff #3 #0:2 #18101000 #1c1c1818', 
    ' #1e1e1e1c #9f9f1f1f #ffdfdf9f #ffffffff:3 #ffff #0:8 #10842100', 
    ' #63 #0:28 #80000000 #4020100 #c0603008 #e070180 #e0f0381c', 
    ' #1f0783c1 #f0f87c3e #1f8fc7e3 #f9fcfe3f #c3e7f3 #0:5 #fffffc00', 
    ' #ffffffff:2 #ffe7ffff #ffffffff #427f #0:2 #fffffe00 #ffffffff:8', 
    ' #100f07 #0:4 #fff00000 #ffffffff:3 #9fcfffff #ffffffff:2 #e0fcfff', 
    ' #8080808 #0:4 #fffff000 #ffffffff:7 #f0f7ffff #30f1f1 #0:3', 
    ' #fffffff0 #ffffffff:5 #7f #0 #fffffff8 #ffffffff:7 #707ffff', 
    ' #4060606 #0:2 #f8000000 #ffffffff:8 #80f0fd #0:3 #fff80000', 
    ' #ffffffff:3 #67fffff #0:28 #2010000 #e0301804 #f0381c0 #80f87c1e', 
    ' #1 #0:28 #fbf7cf9f #ffff7efd #ffffffff:3 #3ffffff #0:9', 
    ' #4040400 #6060604 #70706 #0:18 #1c380000 #e3c7870e #3e7c78f1', 
    ' #f7efcf9f #fffefdfb #1fff #0:5 #ff000000 #ffffffff:2 #ffe7bfff', 
    ' #ffffffff #3bfffff #0:5 #e0000000 #ffffffff:3 #fffffc47 #ffffffff', 
    ' #7fff #0:5 #fffffffc #ffffffff:7 #203f3 #0:3 #fc000000', 
    ' #ffffffff:7 #20383f3 #0:4 #fffc0000 #ffffffff:4 #38e30fb ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-4'].nodes.getSequenceFromMask(
    mask=('[#555000 #5500155 #0:4 #1fe000 #0 #fffc0000 #3ffff', 
    ' #0:3 #7c000000 #ff800000 #7ffffffd #fff00000 #7fffffff #ffff0000', 
    ' #7fffffff #fe000000 #ffffffff #f8000003 #ffffffff #3f #fffffffe', 
    ' #fff80003 #1f #0:6 #f0000000 #80000000 #ffffffff #3', 
    ' #ffffffc0 #3f #fffff800 #f83e01ff #c0000007 #ffffffff #3f', 
    ' #ffffffe0 #1f #0:8 #30 #0:3 #ffff0000 #ff', 
    ' #ffff8000 #ff01ff #fe000000 #7ffffff #0 #ffffffc #0:17', 
    ' #84200000 #0:3 #2020000 #6060602 #1e1e0e0e #3e3e3e1e #fe7e7e7e', 
    ' #fffefefe #ffffffff:2 #1c1 #0:4 #1000000 #81810101 #c1c18181', 
    ' #e1e1e1c1 #f1f1f1e1 #f9f9f9f1 #fdfdfdf9 #181e1 #0:18 #fff00000', 
    ' #ffffffff:2 #dfffffff #ffffffff #10cffff #0:2 #fff80000 #ffffffff:5', 
    ' #fffffbff #ffffffff #79ffffff #18787878 #0:3 #fffff800 #ffffffff:5', 
    ' #3fff #0 #fffffc00 #ffffffff:7 #83ffffff #3030303 #2', 
    ' #0:2 #fffffffc #ffffffff:7 #40787eff #0:3 #fc000000 #ffffffff:5', 
    ' #3fffffff #ffffffff:2 #403f8ff #0:8 #18101000 #1c1c1818 #1e1e1e1c', 
    ' #9f9f1f1f #7 #0:43 #20100000 #3008040 #70180c06 #381c0e0', 
    ' #207 #0:6 #def7bc00 #ffffffff:3 #5efff #0:3 #fffffe00', 
    ' #ffffffff:3 #ff8ff8ff #ffffffff:2 #783ff #0:6 #fff00000 #ffffffff:2', 
    ' #fcffffff #fffffff3 #ffffffff #c0f3f #0:6 #fffff000 #ffffffff:3', 
    ' #fcfbffff #ffffffff:2 #71ff #1000 #0:4 #fffffff0 #ffffffff:4', 
    ' #7ff #0:2 #fffffff8 #ffffffff:7 #407e7 #0:3 #f8000000', 
    ' #ffffffff:7 #40707e7 #0:4 #fff80000 #ffffffff:2 #667fffff #6', 
    ' #0:61 #c3870e18 #1e3c78e1 #f9f3e78f #efdfbf7c #fdfff7 #0:32', 
    ' #20408000 #60c1810 #70e1c383 #38 #0:6 #ff000000 #ffffffff:3', 
    ' #439fffff #0:6 #e0000000 #ffffffff:4 #71e7f #0:6 #fffffffc', 
    ' #ffffffff:5 #c3ffffff #3 #0:4 #fc000000 #ffffffff:4 #fbffffff', 
    ' #c3fbfbfb #303 #0:5 #fffc0000 #ffffffff #ffffffc7 #ffffffff', ' #20f ]', 
    ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-5'].nodes.getSequenceFromMask(
    mask=('[#555000 #5400155 #0:6 #ff800000 #3f #0:3 #1c000000', 
    ' #e0000000 #7fffffff #fe000000 #7fffffff #ffe00000 #7fffffff #fc000000', 
    ' #ffffffff #3 #fffffffe #3f #fff7fc00 #3 #0:7', 
    ' #10000000 #0 #fffffff8 #3 #fffff800 #3f #ffff0000', 
    ' #f83e01ff #7 #fffffff0 #3f #ffffe000 #1f #0:13', 
    ' #1e #fff80000 #ff01ff #c0000000 #7ffffff #0 #ffbff00', 
    ' #0:24 #2020000 #6060602 #1e0e0e0e #301e1e #0:9 #1000000', 
    ' #81810101 #c1c18181 #1 #0:19 #ce700000 #ffbdef79 #ffffffff:2', 
    ' #fffffff #0:3 #fff80000 #ffffffff:3 #7fffffff #ffffffbe #ffffffff', 
    ' #38ffff #0:5 #fffff800 #ffffffff:4 #3ffff #0:2 #fffffc00', 
    ' #ffffffff:7 #203f3ff #0:4 #fffffffc #ffffffff:6 #383f3ff #2', 
    ' #0:3 #fc000000 #ffffffff:3 #e0ffffff #ffffffdf #ffffffff #7ffffff', 
    ' #e #0:68 #c6318400 #739ce718 #fdef7bde #ffffff #0:4', 
    ' #fffffe00 #ffffffff:4 #1f8fffff #783e #0:7 #fff00000 #ffffffff:3', 
    ' #efffffff #b8f #0:7 #fffff000 #ffffffff:2 #ffcfbfff #ffffffff:2', 
    ' #3e #0:6 #fffffff0 #ffffffff:3 #18c6 #0:3 #fffffff8', 
    ' #ffffffff:5 #87ffffff #7 #0:4 #f8000000 #ffffffff:4 #f7ffffff', 
    ' #87f7f7f7 #607 #0:5 #fff80000 #ffc7ffff #7fffffff #4', 
    ' #0:63 #10204081 #e183060c #1c3870 #0:43 #8f000000 #fbf3e7cf', 
    ' #ffff7efd #39ffff #0:7 #e0000000 #ffffffff:3 #27ff #0:7', 
    ' #fffffffc #ffffffff:3 #7fffffff #f0fc #0:6 #fc000000 #f7fbffff', 
    ' #ffffffff:2 #83e3ffff #3838383 #2 #0:6 #fffc0000 #fffffdff', 
    ' #ffffffff #1ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-6'].nodes.getSequenceFromMask(
    mask=('[#555000 #5400144 #0:13 #7ffffffe #0 #7fffe7fc #f8000000', 
    ' #7fffffff #0 #ffffffff #3 #fffffe00 #3f #ffff8000', 
    ' #3 #0:9 #fe3fff00 #1 #3fff8000 #3e #0', 
    ' #f83e01fe #7 #fffffe00 #3f #dff80000 #1f #0:13', 
    ' #2 #fe000000 #ff0183 #0 #71fff80 #0 #ffff000', 
    ' #0:60 #42100000 #318c6108 #9ce739c6 #ff7bdef7 #3 #0:3', 
    ' #fff80000 #ffffffff:2 #e7ffffff #ffffffff:2 #f7f #0:6 #fffff800', 
    ' #ffffffff:3 #c637f #0:3 #fffffc00 #ffffffff:6 #3c3 #0:5', 
    ' #fffffffc #ffffffff:4 #fbfbfbfb #303c3 #0:5 #fc000000 #ffffffff:5', 
    ' #f07f3f9f #0:71 #10840000 #c631842 #0:5 #fffffe00 #ffffffff:3', 
    ' #1fcffff #3 #0:8 #cfc00000 #efefcfcf #ffffefef #fcfffff', 
    ' #80e #0:8 #fffff000 #ffffffff:3 #e7ffffff #20 #0:7', 
    ' #fffffff0 #fffe1fff #ffffffff #f #0:4 #fffffff8 #ffffffff:4', 
    ' #1e1f8 #0:6 #f8000000 #eff7ffff #ffffffff:2 #7c7ffff #7070707', 
    ' #4 #0:6 #fff80000 #fffffffb #fff #0:110 #81000000', 
    ' #183060c0 #30e1c #0:9 #f1e3870c #efdfbe7c #3f #0:8', 
    ' #fe7ffffc #fffffffc #ffffffff #303fb #0:8 #7c000000 #ffffffff:2', 
    ' #203c3f3 #0:9 #fffc0000 #ffffffff #3fff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-7'].nodes.getSequenceFromMask(
    mask=('[#554000 #5000144 #0:13 #3f807fc0 #0 #7fffff80 #0', 
    ' #7ffffff8 #0 #ffffffe0 #3 #fdff8000 #7 #fff80000', 
    ' #3 #0:9 #1e000000 #0 #3ff00000 #30 #0', 
    ' #f83e001e #7 #fffc0000 #38 #ff800000 #1f #0:15', 
    ' #ff0000 #0 #7fff000 #0 #fbe0000 #0:62 #84200000', 
    ' #10 #0:4 #fbf80000 #fffbfbfb #ffffffff:3 #107b #0:7', 
    ' #fffff800 #ff8fffff #ffffffff #3ff #0:4 #fffffc00 #ffffffff:4', 
    ' #f0fc7f #0:7 #fbfffffc #fffffff7 #ffffffff #e3ffffff #83838383', 
    ' #203 #0:6 #fc000000 #dfe7f3f9 #ffffffbf #ffffffff:2 #403f1', 
    ' #0:79 #f83c1e00 #8fc3e1f0 #fcfe7f1f #701 #0:10 #c000000', 
    ' #f0e0e0e #c0f0f0f #0:10 #f1f1f000 #f3f3f1f1 #f7f7f3f3 #1073f7f7', 
    ' #0:9 #fff7fff0 #ffffffff #63ff #0:5 #fcfffff8 #fffffff9', 
    ' #ffffffff #607f7 #0:8 #f8000000 #fffffffe #ffffffff #40787e7', 
    ' #0:9 #fff80000 #7ffffff #0:134 #fffffffc #e3ffffff #3', 
    ' #0:9 #fc000000 #ffffffff #33b #0:10 #bef80000 #c3ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-8'].nodes.getSequenceFromMask(
    mask=('[#554000 #1000140 #0:13 #7800000 #0 #7ffff800 #0', 
    ' #7ff7fe00 #0 #8fffc000 #3 #7ff80000 #0 #fe000000', 
    ' #3 #0:11 #1c000000 #0:2 #f83e0002 #7 #ff800000', 
    ' #3f #f0000000 #1f #0:15 #ff0000 #0 #7fc0000', 
    ' #0:70 #78780000 #f8f8f878 #f9f8f8f8 #38f9f9f9 #0:9 #fbfff800', 
    ' #ffffffff #31ffff #0:5 #7ffffc00 #fffffcfe #ffffffff #303fbff', 
    ' #0:9 #ffffff7c #ffffffff #3c3f3ff #2 #0:8 #c000000', 
    ' #c0e07018 #3e0f0783 #200f87c #0:108 #30301000 #70703030 #3070', 
    ' #0:10 #fffffff0 #3fffff #0:6 #fffffff8 #c7ffffff #7', 
    ' #0:9 #f8000000 #ffffffff #677 #0:10 #fff80000 #47', 
    ' #0:134 #f3fffffc #203 #0:10 #f0000000 #20383 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-9'].nodes.getSequenceFromMask(
    mask=('[#154000 #40 #0:13 #800000 #0 #7ffe0000 #0', 
    ' #7fffe000 #0 #fff80000 #3 #1f000000 #0:17 #f81e0000', 
    ' #7 #e0000000 #3f #0:90 #8080000 #18181808 #183818', 
    ' #0:10 #fffff800 #1fffffff #0:6 #fffffc00 #ffffffff #3e3', 
    ' #0:10 #fffffffc #33bff #0:135 #1fffef0 #0:7 #e7fffff8', 
    ' #407 #0:10 #c0000000 #40707 ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-10'].nodes.getSequenceFromMask(
    mask=('[#50000 #0:16 #3c000000 #0 #7ffc0000 #0 #fe000000', 
    ' #3 #0:125 #ffef7800 #0:7 #fffffc00 #203f3 #0:11', ' #20383e0 ]', ), ))
# Save by mofid on 2024_12_20-07.36.09; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-4', region=mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-Auxetic']
    , u1=UNSET, u2=-17.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-5', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-Auxetic-Struct'], u1=
    UNSET, u2=-17.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-6', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-Nodal-honeycomb'], u1=UNSET, 
    u2=-17.0, u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
# Save by mofid on 2024_12_20-07.36.54; build 2023 2022_09_28-21.41.55 183150
# Save by mofid on 2024_12_20-07.37.00; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].constraints['Constraint-1'].suppress()
mdb.models['Model-1'].constraints['Constraint-2'].suppress()
mdb.models['Model-1'].constraints['Constraint-2'].resume()
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-1geo-cell', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['geocell-1'].faces.getSequenceFromMask(
    mask=('[#ffffffff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#ffffffff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-3'].faces.getSequenceFromMask(
    mask=('[#ffffffff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-4'].faces.getSequenceFromMask(
    mask=('[#ffffffff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-5'].faces.getSequenceFromMask(
    mask=('[#ffffffff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-6'].faces.getSequenceFromMask(
    mask=('[#efffffff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-7'].faces.getSequenceFromMask(
    mask=('[#eeffbfff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-8'].faces.getSequenceFromMask(
    mask=('[#feffbfff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-9'].faces.getSequenceFromMask(
    mask=('[#ffffdfee #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-10'].faces.getSequenceFromMask(
    mask=('[#eeffbffe #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-11'].faces.getSequenceFromMask(
    mask=('[#66ffbfff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-12'].faces.getSequenceFromMask(
    mask=('[#f8ff9fef #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-13'].faces.getSequenceFromMask(
    mask=('[#ffffcfee #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-14'].faces.getSequenceFromMask(
    mask=('[#effffff8 #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-15'].faces.getSequenceFromMask(
    mask=('[#eeffbfff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-16'].faces.getSequenceFromMask(
    mask=('[#eeffbfff #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-17'].faces.getSequenceFromMask(
    mask=('[#feff9fee #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-18'].faces.getSequenceFromMask(
    mask=('[#ffffdfee #3f ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['geocell-1-lin-1-19'].faces.getSequenceFromMask(
    mask=('[#effffffe #3f ]', ), ))
# Save by mofid on 2024_12_20-07.39.06; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Surface(name='m-Surf-auxetic', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1'].faces.getSequenceFromMask(
    mask=('[#fffffff7 #7ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-2'].faces.getSequenceFromMask(
    mask=('[#fffffff7 #7ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-3'].faces.getSequenceFromMask(
    mask=('[#fffffff7 #7ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-4'].faces.getSequenceFromMask(
    mask=('[#fffffff7 #7ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-5'].faces.getSequenceFromMask(
    mask=('[#fffffffb #7ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-6'].faces.getSequenceFromMask(
    mask=('[#ffffffff #7ff ]', ), )+\
    mdb.models['Model-1'].rootAssembly.instances['Auxetic-1-lin-1-7'].faces.getSequenceFromMask(
    mask=('[#ffffffff #7ff ]', ), ))
mdb.models['Model-1'].constraints['Constraint-1'].resume()
mdb.models['Model-1'].constraints['Constraint-2'].suppress()
# Save by mofid on 2024_12_20-07.42.03; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *ENRICHMENT, file "Job-1.inp", line 76497: Unknown assembly set _PICKEDSET19', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'THE ENRICHMENT KEYWORD IS NOT AVAILABLE IN Abaqus/Explicit', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'ANALYSIS WILL BE TERMINATED', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
del mdb.models['Model-1'].parts['middle_base']
del mdb.models['Model-1'].parts['load_plate']
del mdb.models['Model-1'].parts['crack']
del mdb.models['Model-1'].parts['Bottom']
mdb.models['Model-1'].rootAssembly.deleteFeatures(('Datum csys-1', 'RP-1'))
del mdb.models['Model-1'].rootAssembly.surfaces['Surf-load-plate']
del mdb.models['Model-1'].rootAssembly.surfaces['s_Surf-middle']
del mdb.models['Model-1'].rootAssembly.engineeringFeatures.cracks['Crack-1']
# Save by mofid on 2024_12_20-08.04.34; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': '16324 nodes on an embedded element do not lie in any host element. Check coordinates, exterior tolerance and absolute exterior tolerance parameters, and the host element set definition. The nodes have been identified in node set ErrNodeEmbeddedNode.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\DirectoryName-auxetic\\Job-1.odb', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error - Please see the  Job-1.dat file for possible error messages if the file exists.', 
    'jobName': 'Job-1'})
mdb.models['Model-1'].constraints['Constraint-1'].suppress()
# Save by mofid on 2024_12_20-08.06.03; build 2023 2022_09_28-21.41.55 183150
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['Job-1'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['Job-1']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 0, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'OP=NEW on *CONTACT is ignored when the general contact definition is specified as model data.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 9876, 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 2 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'The thickness used in the general contact algorithm for elements in element set WarnElemGContThickReduce has been reduced. See the status file for further details.', 
    'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'Job-1'})
mdb.jobs['Job-1']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-QCIN5NE', 'handle': 5556, 'jobName': 'Job-1'})
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Honeycomb'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Honeycomb'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Honeycomb'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
mdb.models['Model-1'].ConstrainedSketch(name='__edit__', objectToCopy=
    mdb.models['Model-1'].parts['Auxetic'].features['Shell extrude-1'].sketch)
mdb.models['Model-1'].parts['Auxetic'].projectReferencesOntoSketch(filter=
    COPLANAR_EDGES, sketch=mdb.models['Model-1'].sketches['__edit__'], 
    upToFeature=
    mdb.models['Model-1'].parts['Auxetic'].features['Shell extrude-1'])
del mdb.models['Model-1'].sketches['__edit__']
# Save by mofid on 2024_12_20-08.17.48; build 2023 2022_09_28-21.41.55 183150
